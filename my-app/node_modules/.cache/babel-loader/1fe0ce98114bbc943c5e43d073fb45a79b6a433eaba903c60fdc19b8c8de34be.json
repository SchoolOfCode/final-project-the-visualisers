{"ast":null,"code":"\"use strict\";\n\n/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmbeddingRequest$ = exports.EmbeddingRequest$outboundSchema = exports.EmbeddingRequest$inboundSchema = exports.Inputs$ = exports.Inputs$outboundSchema = exports.Inputs$inboundSchema = void 0;\nconst z = __importStar(require(\"zod\"));\nconst primitives_js_1 = require(\"../../lib/primitives.js\");\n/** @internal */\nexports.Inputs$inboundSchema = z.union([z.string(), z.array(z.string())]);\n/** @internal */\nexports.Inputs$outboundSchema = z.union([z.string(), z.array(z.string())]);\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar Inputs$;\n(function (Inputs$) {\n  /** @deprecated use `Inputs$inboundSchema` instead. */\n  Inputs$.inboundSchema = exports.Inputs$inboundSchema;\n  /** @deprecated use `Inputs$outboundSchema` instead. */\n  Inputs$.outboundSchema = exports.Inputs$outboundSchema;\n})(Inputs$ || (exports.Inputs$ = Inputs$ = {}));\n/** @internal */\nexports.EmbeddingRequest$inboundSchema = z.object({\n  input: z.union([z.string(), z.array(z.string())]),\n  model: z.string(),\n  encoding_format: z.nullable(z.string()).optional()\n}).transform(v => {\n  return (0, primitives_js_1.remap)(v, {\n    \"input\": \"inputs\",\n    \"encoding_format\": \"encodingFormat\"\n  });\n});\n/** @internal */\nexports.EmbeddingRequest$outboundSchema = z.object({\n  inputs: z.union([z.string(), z.array(z.string())]),\n  model: z.string(),\n  encodingFormat: z.nullable(z.string()).optional()\n}).transform(v => {\n  return (0, primitives_js_1.remap)(v, {\n    inputs: \"input\",\n    encodingFormat: \"encoding_format\"\n  });\n});\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar EmbeddingRequest$;\n(function (EmbeddingRequest$) {\n  /** @deprecated use `EmbeddingRequest$inboundSchema` instead. */\n  EmbeddingRequest$.inboundSchema = exports.EmbeddingRequest$inboundSchema;\n  /** @deprecated use `EmbeddingRequest$outboundSchema` instead. */\n  EmbeddingRequest$.outboundSchema = exports.EmbeddingRequest$outboundSchema;\n})(EmbeddingRequest$ || (exports.EmbeddingRequest$ = EmbeddingRequest$ = {}));","map":{"version":3,"names":["z","__importStar","require","primitives_js_1","exports","Inputs$inboundSchema","union","string","array","Inputs$outboundSchema","Inputs$","inboundSchema","outboundSchema","EmbeddingRequest$inboundSchema","object","input","model","encoding_format","nullable","optional","transform","v","remap","EmbeddingRequest$outboundSchema","inputs","encodingFormat","EmbeddingRequest$"],"sources":["C:\\Users\\silvi\\OneDrive\\Escritorio\\LUISDEEEE\\School of code\\WEEK 12 FINAL HACKATON\\HistoriansRule\\node_modules\\@mistralai\\mistralai\\src\\models\\components\\embeddingrequest.ts"],"sourcesContent":["/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\r\n\r\nimport * as z from \"zod\";\r\nimport { remap as remap$ } from \"../../lib/primitives.js\";\r\n\r\n/**\r\n * Text to embed.\r\n */\r\nexport type Inputs = string | Array<string>;\r\n\r\nexport type EmbeddingRequest = {\r\n  /**\r\n   * Text to embed.\r\n   */\r\n  inputs: string | Array<string>;\r\n  /**\r\n   * ID of the model to use.\r\n   */\r\n  model: string;\r\n  /**\r\n   * The format to return the embeddings in.\r\n   */\r\n  encodingFormat?: string | null | undefined;\r\n};\r\n\r\n/** @internal */\r\nexport const Inputs$inboundSchema: z.ZodType<Inputs, z.ZodTypeDef, unknown> = z\r\n  .union([z.string(), z.array(z.string())]);\r\n\r\n/** @internal */\r\nexport type Inputs$Outbound = string | Array<string>;\r\n\r\n/** @internal */\r\nexport const Inputs$outboundSchema: z.ZodType<\r\n  Inputs$Outbound,\r\n  z.ZodTypeDef,\r\n  Inputs\r\n> = z.union([z.string(), z.array(z.string())]);\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace Inputs$ {\r\n  /** @deprecated use `Inputs$inboundSchema` instead. */\r\n  export const inboundSchema = Inputs$inboundSchema;\r\n  /** @deprecated use `Inputs$outboundSchema` instead. */\r\n  export const outboundSchema = Inputs$outboundSchema;\r\n  /** @deprecated use `Inputs$Outbound` instead. */\r\n  export type Outbound = Inputs$Outbound;\r\n}\r\n\r\n/** @internal */\r\nexport const EmbeddingRequest$inboundSchema: z.ZodType<\r\n  EmbeddingRequest,\r\n  z.ZodTypeDef,\r\n  unknown\r\n> = z.object({\r\n  input: z.union([z.string(), z.array(z.string())]),\r\n  model: z.string(),\r\n  encoding_format: z.nullable(z.string()).optional(),\r\n}).transform((v) => {\r\n  return remap$(v, {\r\n    \"input\": \"inputs\",\r\n    \"encoding_format\": \"encodingFormat\",\r\n  });\r\n});\r\n\r\n/** @internal */\r\nexport type EmbeddingRequest$Outbound = {\r\n  input: string | Array<string>;\r\n  model: string;\r\n  encoding_format?: string | null | undefined;\r\n};\r\n\r\n/** @internal */\r\nexport const EmbeddingRequest$outboundSchema: z.ZodType<\r\n  EmbeddingRequest$Outbound,\r\n  z.ZodTypeDef,\r\n  EmbeddingRequest\r\n> = z.object({\r\n  inputs: z.union([z.string(), z.array(z.string())]),\r\n  model: z.string(),\r\n  encodingFormat: z.nullable(z.string()).optional(),\r\n}).transform((v) => {\r\n  return remap$(v, {\r\n    inputs: \"input\",\r\n    encodingFormat: \"encoding_format\",\r\n  });\r\n});\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace EmbeddingRequest$ {\r\n  /** @deprecated use `EmbeddingRequest$inboundSchema` instead. */\r\n  export const inboundSchema = EmbeddingRequest$inboundSchema;\r\n  /** @deprecated use `EmbeddingRequest$outboundSchema` instead. */\r\n  export const outboundSchema = EmbeddingRequest$outboundSchema;\r\n  /** @deprecated use `EmbeddingRequest$Outbound` instead. */\r\n  export type Outbound = EmbeddingRequest$Outbound;\r\n}\r\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAAA,CAAA,GAAAC,YAAA,CAAAC,OAAA;AACA,MAAAC,eAAA,GAAAD,OAAA;AAsBA;AACaE,OAAA,CAAAC,oBAAoB,GAA6CL,CAAC,CAC5EM,KAAK,CAAC,CAACN,CAAC,CAACO,MAAM,EAAE,EAAEP,CAAC,CAACQ,KAAK,CAACR,CAAC,CAACO,MAAM,EAAE,CAAC,CAAC,CAAC;AAK3C;AACaH,OAAA,CAAAK,qBAAqB,GAI9BT,CAAC,CAACM,KAAK,CAAC,CAACN,CAAC,CAACO,MAAM,EAAE,EAAEP,CAAC,CAACQ,KAAK,CAACR,CAAC,CAACO,MAAM,EAAE,CAAC,CAAC,CAAC;AAE9C;;;;AAIA,IAAiBG,OAAO;AAAxB,WAAiBA,OAAO;EACtB;EACaA,OAAA,CAAAC,aAAa,GAAGP,OAAA,CAAAC,oBAAoB;EACjD;EACaK,OAAA,CAAAE,cAAc,GAAGR,OAAA,CAAAK,qBAAqB;AAGrD,CAAC,EAPgBC,OAAO,KAAAN,OAAA,CAAAM,OAAA,GAAPA,OAAO;AASxB;AACaN,OAAA,CAAAS,8BAA8B,GAIvCb,CAAC,CAACc,MAAM,CAAC;EACXC,KAAK,EAAEf,CAAC,CAACM,KAAK,CAAC,CAACN,CAAC,CAACO,MAAM,EAAE,EAAEP,CAAC,CAACQ,KAAK,CAACR,CAAC,CAACO,MAAM,EAAE,CAAC,CAAC,CAAC;EACjDS,KAAK,EAAEhB,CAAC,CAACO,MAAM,EAAE;EACjBU,eAAe,EAAEjB,CAAC,CAACkB,QAAQ,CAAClB,CAAC,CAACO,MAAM,EAAE,CAAC,CAACY,QAAQ;CACjD,CAAC,CAACC,SAAS,CAAEC,CAAC,IAAI;EACjB,OAAO,IAAAlB,eAAA,CAAAmB,KAAM,EAACD,CAAC,EAAE;IACf,OAAO,EAAE,QAAQ;IACjB,iBAAiB,EAAE;GACpB,CAAC;AACJ,CAAC,CAAC;AASF;AACajB,OAAA,CAAAmB,+BAA+B,GAIxCvB,CAAC,CAACc,MAAM,CAAC;EACXU,MAAM,EAAExB,CAAC,CAACM,KAAK,CAAC,CAACN,CAAC,CAACO,MAAM,EAAE,EAAEP,CAAC,CAACQ,KAAK,CAACR,CAAC,CAACO,MAAM,EAAE,CAAC,CAAC,CAAC;EAClDS,KAAK,EAAEhB,CAAC,CAACO,MAAM,EAAE;EACjBkB,cAAc,EAAEzB,CAAC,CAACkB,QAAQ,CAAClB,CAAC,CAACO,MAAM,EAAE,CAAC,CAACY,QAAQ;CAChD,CAAC,CAACC,SAAS,CAAEC,CAAC,IAAI;EACjB,OAAO,IAAAlB,eAAA,CAAAmB,KAAM,EAACD,CAAC,EAAE;IACfG,MAAM,EAAE,OAAO;IACfC,cAAc,EAAE;GACjB,CAAC;AACJ,CAAC,CAAC;AAEF;;;;AAIA,IAAiBC,iBAAiB;AAAlC,WAAiBA,iBAAiB;EAChC;EACaA,iBAAA,CAAAf,aAAa,GAAGP,OAAA,CAAAS,8BAA8B;EAC3D;EACaa,iBAAA,CAAAd,cAAc,GAAGR,OAAA,CAAAmB,+BAA+B;AAG/D,CAAC,EAPgBG,iBAAiB,KAAAtB,OAAA,CAAAsB,iBAAA,GAAjBA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}