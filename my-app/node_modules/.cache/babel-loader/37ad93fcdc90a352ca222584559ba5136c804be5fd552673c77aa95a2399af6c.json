{"ast":null,"code":"\"use strict\";\n\n/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClientSDK = void 0;\nconst hooks_js_1 = require(\"../hooks/hooks.js\");\nconst httpclienterrors_js_1 = require(\"../models/errors/httpclienterrors.js\");\nconst fp_js_1 = require(\"../types/fp.js\");\nconst base64_js_1 = require(\"./base64.js\");\nconst config_js_1 = require(\"./config.js\");\nconst encodings_js_1 = require(\"./encodings.js\");\nconst env_js_1 = require(\"./env.js\");\nconst http_js_1 = require(\"./http.js\");\nconst retries_js_1 = require(\"./retries.js\");\nconst gt = typeof globalThis === \"undefined\" ? null : globalThis;\nconst webWorkerLike = typeof gt === \"object\" && gt != null && \"importScripts\" in gt && typeof gt[\"importScripts\"] === \"function\";\nconst isBrowserLike = webWorkerLike || typeof navigator !== \"undefined\" && \"serviceWorker\" in navigator || typeof window === \"object\" && typeof window.document !== \"undefined\";\nclass ClientSDK {\n  constructor(options = {}) {\n    const opt = options;\n    if (typeof opt === \"object\" && opt != null && \"hooks\" in opt && opt.hooks instanceof hooks_js_1.SDKHooks) {\n      this.hooks$ = opt.hooks;\n    } else {\n      this.hooks$ = new hooks_js_1.SDKHooks();\n    }\n    this.options$ = {\n      ...options,\n      hooks: this.hooks$\n    };\n    const url = (0, config_js_1.serverURLFromOptions)(options);\n    if (url) {\n      url.pathname = url.pathname.replace(/\\/+$/, \"\") + \"/\";\n    }\n    const {\n      baseURL,\n      client\n    } = this.hooks$.sdkInit({\n      baseURL: url,\n      client: options.httpClient || new http_js_1.HTTPClient()\n    });\n    this.baseURL = baseURL;\n    this.httpClient = client;\n    this.logger = options.debugLogger;\n    if (!this.logger && (0, env_js_1.env)().MISTRAL_DEBUG) {\n      this.logger = console;\n    }\n  }\n  createRequest$(context, conf, options) {\n    var _a, _b, _c, _d;\n    const {\n      method,\n      path,\n      query,\n      headers: opHeaders,\n      security\n    } = conf;\n    const base = (_a = conf.baseURL) !== null && _a !== void 0 ? _a : this.baseURL;\n    if (!base) {\n      return (0, fp_js_1.ERR)(new httpclienterrors_js_1.InvalidRequestError(\"No base URL provided for operation\"));\n    }\n    const reqURL = new URL(base);\n    const inputURL = new URL(path, reqURL);\n    if (path) {\n      reqURL.pathname += inputURL.pathname.replace(/^\\/+/, \"\");\n    }\n    let finalQuery = query || \"\";\n    const secQuery = [];\n    for (const [k, v] of Object.entries((security === null || security === void 0 ? void 0 : security.queryParams) || {})) {\n      secQuery.push((0, encodings_js_1.encodeForm)(k, v, {\n        charEncoding: \"percent\"\n      }));\n    }\n    if (secQuery.length) {\n      finalQuery += `&${secQuery.join(\"&\")}`;\n    }\n    if (finalQuery) {\n      const q = finalQuery.startsWith(\"&\") ? finalQuery.slice(1) : finalQuery;\n      reqURL.search = `?${q}`;\n    }\n    const headers = new Headers(opHeaders);\n    const username = security === null || security === void 0 ? void 0 : security.basic.username;\n    const password = security === null || security === void 0 ? void 0 : security.basic.password;\n    if (username != null || password != null) {\n      const encoded = (0, base64_js_1.stringToBase64)([username || \"\", password || \"\"].join(\":\"));\n      headers.set(\"Authorization\", `Basic ${encoded}`);\n    }\n    const securityHeaders = new Headers((security === null || security === void 0 ? void 0 : security.headers) || {});\n    for (const [k, v] of securityHeaders) {\n      headers.set(k, v);\n    }\n    let cookie = headers.get(\"cookie\") || \"\";\n    for (const [k, v] of Object.entries((security === null || security === void 0 ? void 0 : security.cookies) || {})) {\n      cookie += `; ${k}=${v}`;\n    }\n    cookie = cookie.startsWith(\"; \") ? cookie.slice(2) : cookie;\n    headers.set(\"cookie\", cookie);\n    const userHeaders = new Headers((_b = options === null || options === void 0 ? void 0 : options.fetchOptions) === null || _b === void 0 ? void 0 : _b.headers);\n    for (const [k, v] of userHeaders) {\n      headers.set(k, v);\n    }\n    // Only set user agent header in non-browser-like environments since CORS\n    // policy disallows setting it in browsers e.g. Chrome throws an error.\n    if (!isBrowserLike) {\n      headers.set((_c = conf.uaHeader) !== null && _c !== void 0 ? _c : \"user-agent\", config_js_1.SDK_METADATA.userAgent);\n    }\n    let fetchOptions = options === null || options === void 0 ? void 0 : options.fetchOptions;\n    if (!(fetchOptions === null || fetchOptions === void 0 ? void 0 : fetchOptions.signal) && conf.timeoutMs && conf.timeoutMs > 0) {\n      const timeoutSignal = AbortSignal.timeout(conf.timeoutMs);\n      if (!fetchOptions) {\n        fetchOptions = {\n          signal: timeoutSignal\n        };\n      } else {\n        fetchOptions.signal = timeoutSignal;\n      }\n    }\n    if (conf.body instanceof ReadableStream) {\n      if (!fetchOptions) {\n        fetchOptions = {\n          // @ts-expect-error see https://github.com/node-fetch/node-fetch/issues/1769\n          duplex: \"half\"\n        };\n      } else {\n        // @ts-expect-error see https://github.com/node-fetch/node-fetch/issues/1769\n        fetchOptions.duplex = \"half\";\n      }\n    }\n    let input;\n    try {\n      input = this.hooks$.beforeCreateRequest(context, {\n        url: reqURL,\n        options: {\n          ...fetchOptions,\n          body: (_d = conf.body) !== null && _d !== void 0 ? _d : null,\n          headers,\n          method\n        }\n      });\n    } catch (err) {\n      return (0, fp_js_1.ERR)(new httpclienterrors_js_1.UnexpectedClientError(\"Create request hook failed to execute\", {\n        cause: err\n      }));\n    }\n    return (0, fp_js_1.OK)(new Request(input.url, input.options));\n  }\n  async do$(request, options) {\n    const {\n      context,\n      errorCodes\n    } = options;\n    const retryConfig = options.retryConfig || {\n      strategy: \"none\"\n    };\n    const retryCodes = options.retryCodes || [];\n    return (0, retries_js_1.retry)(async () => {\n      const req = await this.hooks$.beforeRequest(context, request.clone());\n      await logRequest(this.logger, req).catch(e => {\n        var _a;\n        return (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log(\"Failed to log request:\", e);\n      });\n      let response = await this.httpClient.request(req);\n      if ((0, http_js_1.matchStatusCode)(response, errorCodes)) {\n        const result = await this.hooks$.afterError(context, response, null);\n        if (result.error) {\n          throw result.error;\n        }\n        response = result.response || response;\n      } else {\n        response = await this.hooks$.afterSuccess(context, response);\n      }\n      await logResponse(this.logger, response, req).catch(e => {\n        var _a;\n        return (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log(\"Failed to log response:\", e);\n      });\n      return response;\n    }, {\n      config: retryConfig,\n      statusCodes: retryCodes\n    }).then(r => (0, fp_js_1.OK)(r), err => {\n      switch (true) {\n        case (0, http_js_1.isAbortError)(err):\n          return (0, fp_js_1.ERR)(new httpclienterrors_js_1.RequestAbortedError(\"Request aborted by client\", {\n            cause: err\n          }));\n        case (0, http_js_1.isTimeoutError)(err):\n          return (0, fp_js_1.ERR)(new httpclienterrors_js_1.RequestTimeoutError(\"Request timed out\", {\n            cause: err\n          }));\n        case (0, http_js_1.isConnectionError)(err):\n          return (0, fp_js_1.ERR)(new httpclienterrors_js_1.ConnectionError(\"Unable to make request\", {\n            cause: err\n          }));\n        default:\n          return (0, fp_js_1.ERR)(new httpclienterrors_js_1.UnexpectedClientError(\"Unexpected HTTP client error\", {\n            cause: err\n          }));\n      }\n    });\n  }\n}\nexports.ClientSDK = ClientSDK;\nconst jsonLikeContentTypeRE = /^application\\/(?:.{0,100}\\+)?json/;\nasync function logRequest(logger, req) {\n  if (!logger) {\n    return;\n  }\n  const contentType = req.headers.get(\"content-type\");\n  const ct = (contentType === null || contentType === void 0 ? void 0 : contentType.split(\";\")[0]) || \"\";\n  logger.group(`> Request: ${req.method} ${req.url}`);\n  logger.group(\"Headers:\");\n  for (const [k, v] of req.headers.entries()) {\n    logger.log(`${k}: ${v}`);\n  }\n  logger.groupEnd();\n  logger.group(\"Body:\");\n  switch (true) {\n    case jsonLikeContentTypeRE.test(ct):\n      logger.log(await req.clone().json());\n      break;\n    case ct.startsWith(\"text/\"):\n      logger.log(await req.clone().text());\n      break;\n    case ct === \"multipart/form-data\":\n      {\n        const body = await req.clone().formData();\n        for (const [k, v] of body) {\n          const vlabel = v instanceof Blob ? \"<Blob>\" : v;\n          logger.log(`${k}: ${vlabel}`);\n        }\n        break;\n      }\n    default:\n      logger.log(`<${contentType}>`);\n      break;\n  }\n  logger.groupEnd();\n  logger.groupEnd();\n}\nasync function logResponse(logger, res, req) {\n  if (!logger) {\n    return;\n  }\n  const contentType = res.headers.get(\"content-type\");\n  const ct = (contentType === null || contentType === void 0 ? void 0 : contentType.split(\";\")[0]) || \"\";\n  logger.group(`< Response: ${req.method} ${req.url}`);\n  logger.log(\"Status Code:\", res.status, res.statusText);\n  logger.group(\"Headers:\");\n  for (const [k, v] of res.headers.entries()) {\n    logger.log(`${k}: ${v}`);\n  }\n  logger.groupEnd();\n  logger.group(\"Body:\");\n  switch (true) {\n    case (0, http_js_1.matchContentType)(res, \"application/json\") || jsonLikeContentTypeRE.test(ct):\n      logger.log(await res.clone().json());\n      break;\n    case (0, http_js_1.matchContentType)(res, \"text/event-stream\"):\n      logger.log(`<${contentType}>`);\n      break;\n    case (0, http_js_1.matchContentType)(res, \"text/*\"):\n      logger.log(await res.clone().text());\n      break;\n    case (0, http_js_1.matchContentType)(res, \"multipart/form-data\"):\n      {\n        const body = await res.clone().formData();\n        for (const [k, v] of body) {\n          const vlabel = v instanceof Blob ? \"<Blob>\" : v;\n          logger.log(`${k}: ${vlabel}`);\n        }\n        break;\n      }\n    default:\n      logger.log(`<${contentType}>`);\n      break;\n  }\n  logger.groupEnd();\n  logger.groupEnd();\n}","map":{"version":3,"names":["hooks_js_1","require","httpclienterrors_js_1","fp_js_1","base64_js_1","config_js_1","encodings_js_1","env_js_1","http_js_1","retries_js_1","gt","globalThis","webWorkerLike","isBrowserLike","navigator","window","document","ClientSDK","constructor","options","opt","hooks","SDKHooks","hooks$","options$","url","serverURLFromOptions","pathname","replace","baseURL","client","sdkInit","httpClient","HTTPClient","logger","debugLogger","env","MISTRAL_DEBUG","console","createRequest$","context","conf","method","path","query","headers","opHeaders","security","base","_a","ERR","InvalidRequestError","reqURL","URL","inputURL","finalQuery","secQuery","k","v","Object","entries","queryParams","push","encodeForm","charEncoding","length","join","q","startsWith","slice","search","Headers","username","basic","password","encoded","stringToBase64","set","securityHeaders","cookie","get","cookies","userHeaders","_b","fetchOptions","_c","uaHeader","SDK_METADATA","userAgent","signal","timeoutMs","timeoutSignal","AbortSignal","timeout","body","ReadableStream","duplex","input","beforeCreateRequest","_d","err","UnexpectedClientError","cause","OK","Request","do$","request","errorCodes","retryConfig","strategy","retryCodes","retry","req","beforeRequest","clone","logRequest","catch","e","log","response","matchStatusCode","result","afterError","error","afterSuccess","logResponse","config","statusCodes","then","r","isAbortError","RequestAbortedError","isTimeoutError","RequestTimeoutError","isConnectionError","ConnectionError","exports","jsonLikeContentTypeRE","contentType","ct","split","group","groupEnd","test","json","text","formData","vlabel","Blob","res","status","statusText","matchContentType"],"sources":["C:\\Users\\silvi\\OneDrive\\Escritorio\\LUISDEEEE\\School of code\\week 13\\final-project-the-visualisers\\node_modules\\@mistralai\\mistralai\\src\\lib\\sdks.ts"],"sourcesContent":["/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\r\n\r\nimport { SDKHooks } from \"../hooks/hooks.js\";\r\nimport { HookContext } from \"../hooks/types.js\";\r\nimport {\r\n  ConnectionError,\r\n  InvalidRequestError,\r\n  RequestAbortedError,\r\n  RequestTimeoutError,\r\n  UnexpectedClientError,\r\n} from \"../models/errors/httpclienterrors.js\";\r\nimport { ERR, OK, Result } from \"../types/fp.js\";\r\nimport { stringToBase64 } from \"./base64.js\";\r\nimport { SDK_METADATA, SDKOptions, serverURLFromOptions } from \"./config.js\";\r\nimport { encodeForm } from \"./encodings.js\";\r\nimport { env } from \"./env.js\";\r\nimport {\r\n  HTTPClient,\r\n  isAbortError,\r\n  isConnectionError,\r\n  isTimeoutError,\r\n  matchContentType,\r\n  matchStatusCode,\r\n} from \"./http.js\";\r\nimport { Logger } from \"./logger.js\";\r\nimport { retry, RetryConfig } from \"./retries.js\";\r\nimport { SecurityState } from \"./security.js\";\r\n\r\nexport type RequestOptions = {\r\n  /**\r\n   * Sets a timeout, in milliseconds, on HTTP requests made by an SDK method. If\r\n   * `fetchOptions.signal` is set then it will take precedence over this option.\r\n   */\r\n  timeoutMs?: number;\r\n  /**\r\n   * Set or override a retry policy on HTTP calls.\r\n   */\r\n  retries?: RetryConfig;\r\n  /**\r\n   * Specifies the status codes which should be retried using the given retry policy.\r\n   */\r\n  retryCodes?: string[];\r\n  /**\r\n   * Sets various request options on the `fetch` call made by an SDK method.\r\n   *\r\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Request/Request#options|Request}\r\n   */\r\n  fetchOptions?: Omit<RequestInit, \"method\" | \"body\">;\r\n};\r\n\r\ntype RequestConfig = {\r\n  method: string;\r\n  path: string;\r\n  baseURL?: string | URL;\r\n  query?: string;\r\n  body?: RequestInit[\"body\"];\r\n  headers?: HeadersInit;\r\n  security?: SecurityState | null;\r\n  uaHeader?: string;\r\n  timeoutMs?: number;\r\n};\r\n\r\nconst gt: unknown = typeof globalThis === \"undefined\" ? null : globalThis;\r\nconst webWorkerLike = typeof gt === \"object\"\r\n  && gt != null\r\n  && \"importScripts\" in gt\r\n  && typeof gt[\"importScripts\"] === \"function\";\r\nconst isBrowserLike = webWorkerLike\r\n  || (typeof navigator !== \"undefined\" && \"serviceWorker\" in navigator)\r\n  || (typeof window === \"object\" && typeof window.document !== \"undefined\");\r\n\r\nexport class ClientSDK {\r\n  private readonly httpClient: HTTPClient;\r\n  protected readonly baseURL: URL | null;\r\n  protected readonly hooks$: SDKHooks;\r\n  protected readonly logger?: Logger | undefined;\r\n  public readonly options$: SDKOptions & { hooks?: SDKHooks };\r\n\r\n  constructor(options: SDKOptions = {}) {\r\n    const opt = options as unknown;\r\n    if (\r\n      typeof opt === \"object\"\r\n      && opt != null\r\n      && \"hooks\" in opt\r\n      && opt.hooks instanceof SDKHooks\r\n    ) {\r\n      this.hooks$ = opt.hooks;\r\n    } else {\r\n      this.hooks$ = new SDKHooks();\r\n    }\r\n    this.options$ = { ...options, hooks: this.hooks$ };\r\n\r\n    const url = serverURLFromOptions(options);\r\n    if (url) {\r\n      url.pathname = url.pathname.replace(/\\/+$/, \"\") + \"/\";\r\n    }\r\n    const { baseURL, client } = this.hooks$.sdkInit({\r\n      baseURL: url,\r\n      client: options.httpClient || new HTTPClient(),\r\n    });\r\n    this.baseURL = baseURL;\r\n    this.httpClient = client;\r\n    this.logger = options.debugLogger;\r\n    if (!this.logger && env().MISTRAL_DEBUG) {\r\n      this.logger = console;\r\n    }\r\n  }\r\n\r\n  public createRequest$(\r\n    context: HookContext,\r\n    conf: RequestConfig,\r\n    options?: RequestOptions,\r\n  ): Result<Request, InvalidRequestError | UnexpectedClientError> {\r\n    const { method, path, query, headers: opHeaders, security } = conf;\r\n\r\n    const base = conf.baseURL ?? this.baseURL;\r\n    if (!base) {\r\n      return ERR(new InvalidRequestError(\"No base URL provided for operation\"));\r\n    }\r\n    const reqURL = new URL(base);\r\n    const inputURL = new URL(path, reqURL);\r\n\r\n    if (path) {\r\n      reqURL.pathname += inputURL.pathname.replace(/^\\/+/, \"\");\r\n    }\r\n\r\n    let finalQuery = query || \"\";\r\n\r\n    const secQuery: string[] = [];\r\n    for (const [k, v] of Object.entries(security?.queryParams || {})) {\r\n      secQuery.push(encodeForm(k, v, { charEncoding: \"percent\" }));\r\n    }\r\n    if (secQuery.length) {\r\n      finalQuery += `&${secQuery.join(\"&\")}`;\r\n    }\r\n\r\n    if (finalQuery) {\r\n      const q = finalQuery.startsWith(\"&\") ? finalQuery.slice(1) : finalQuery;\r\n      reqURL.search = `?${q}`;\r\n    }\r\n\r\n    const headers = new Headers(opHeaders);\r\n\r\n    const username = security?.basic.username;\r\n    const password = security?.basic.password;\r\n    if (username != null || password != null) {\r\n      const encoded = stringToBase64(\r\n        [username || \"\", password || \"\"].join(\":\"),\r\n      );\r\n      headers.set(\"Authorization\", `Basic ${encoded}`);\r\n    }\r\n\r\n    const securityHeaders = new Headers(security?.headers || {});\r\n    for (const [k, v] of securityHeaders) {\r\n      headers.set(k, v);\r\n    }\r\n\r\n    let cookie = headers.get(\"cookie\") || \"\";\r\n    for (const [k, v] of Object.entries(security?.cookies || {})) {\r\n      cookie += `; ${k}=${v}`;\r\n    }\r\n    cookie = cookie.startsWith(\"; \") ? cookie.slice(2) : cookie;\r\n    headers.set(\"cookie\", cookie);\r\n\r\n    const userHeaders = new Headers(options?.fetchOptions?.headers);\r\n    for (const [k, v] of userHeaders) {\r\n      headers.set(k, v);\r\n    }\r\n\r\n    // Only set user agent header in non-browser-like environments since CORS\r\n    // policy disallows setting it in browsers e.g. Chrome throws an error.\r\n    if (!isBrowserLike) {\r\n      headers.set(conf.uaHeader ?? \"user-agent\", SDK_METADATA.userAgent);\r\n    }\r\n\r\n    let fetchOptions = options?.fetchOptions;\r\n    if (!fetchOptions?.signal && conf.timeoutMs && conf.timeoutMs > 0) {\r\n      const timeoutSignal = AbortSignal.timeout(conf.timeoutMs);\r\n      if (!fetchOptions) {\r\n        fetchOptions = { signal: timeoutSignal };\r\n      } else {\r\n        fetchOptions.signal = timeoutSignal;\r\n      }\r\n    }\r\n\r\n    if (conf.body instanceof ReadableStream) {\r\n      if (!fetchOptions) {\r\n        fetchOptions = {\r\n          // @ts-expect-error see https://github.com/node-fetch/node-fetch/issues/1769\r\n          duplex: \"half\",\r\n        };\r\n      } else {\r\n        // @ts-expect-error see https://github.com/node-fetch/node-fetch/issues/1769\r\n        fetchOptions.duplex = \"half\";\r\n      }\r\n    }\r\n\r\n    let input;\r\n    try {\r\n      input = this.hooks$.beforeCreateRequest(context, {\r\n        url: reqURL,\r\n        options: {\r\n          ...fetchOptions,\r\n          body: conf.body ?? null,\r\n          headers,\r\n          method,\r\n        },\r\n      });\r\n    } catch (err: unknown) {\r\n      return ERR(\r\n        new UnexpectedClientError(\"Create request hook failed to execute\", {\r\n          cause: err,\r\n        }),\r\n      );\r\n    }\r\n\r\n    return OK(new Request(input.url, input.options));\r\n  }\r\n\r\n  public async do$(\r\n    request: Request,\r\n    options: {\r\n      context: HookContext;\r\n      errorCodes: number | string | (number | string)[];\r\n      retryConfig?: RetryConfig | undefined;\r\n      retryCodes?: string[] | undefined;\r\n    },\r\n  ): Promise<\r\n    Result<\r\n      Response,\r\n      | RequestAbortedError\r\n      | RequestTimeoutError\r\n      | ConnectionError\r\n      | UnexpectedClientError\r\n    >\r\n  > {\r\n    const { context, errorCodes } = options;\r\n    const retryConfig = options.retryConfig || { strategy: \"none\" };\r\n    const retryCodes = options.retryCodes || [];\r\n\r\n    return retry(\r\n      async () => {\r\n        const req = await this.hooks$.beforeRequest(context, request.clone());\r\n        await logRequest(this.logger, req).catch((e) =>\r\n          this.logger?.log(\"Failed to log request:\", e)\r\n        );\r\n\r\n        let response = await this.httpClient.request(req);\r\n\r\n        if (matchStatusCode(response, errorCodes)) {\r\n          const result = await this.hooks$.afterError(context, response, null);\r\n          if (result.error) {\r\n            throw result.error;\r\n          }\r\n          response = result.response || response;\r\n        } else {\r\n          response = await this.hooks$.afterSuccess(context, response);\r\n        }\r\n\r\n        await logResponse(this.logger, response, req)\r\n          .catch(e => this.logger?.log(\"Failed to log response:\", e));\r\n\r\n        return response;\r\n      },\r\n      { config: retryConfig, statusCodes: retryCodes },\r\n    ).then(\r\n      (r) => OK(r),\r\n      (err) => {\r\n        switch (true) {\r\n          case isAbortError(err):\r\n            return ERR(\r\n              new RequestAbortedError(\"Request aborted by client\", {\r\n                cause: err,\r\n              }),\r\n            );\r\n          case isTimeoutError(err):\r\n            return ERR(\r\n              new RequestTimeoutError(\"Request timed out\", { cause: err }),\r\n            );\r\n          case isConnectionError(err):\r\n            return ERR(\r\n              new ConnectionError(\"Unable to make request\", { cause: err }),\r\n            );\r\n          default:\r\n            return ERR(\r\n              new UnexpectedClientError(\"Unexpected HTTP client error\", {\r\n                cause: err,\r\n              }),\r\n            );\r\n        }\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nconst jsonLikeContentTypeRE = /^application\\/(?:.{0,100}\\+)?json/;\r\nasync function logRequest(logger: Logger | undefined, req: Request) {\r\n  if (!logger) {\r\n    return;\r\n  }\r\n\r\n  const contentType = req.headers.get(\"content-type\");\r\n  const ct = contentType?.split(\";\")[0] || \"\";\r\n\r\n  logger.group(`> Request: ${req.method} ${req.url}`);\r\n\r\n  logger.group(\"Headers:\");\r\n  for (const [k, v] of req.headers.entries()) {\r\n    logger.log(`${k}: ${v}`);\r\n  }\r\n  logger.groupEnd();\r\n\r\n  logger.group(\"Body:\");\r\n  switch (true) {\r\n    case jsonLikeContentTypeRE.test(ct):\r\n      logger.log(await req.clone().json());\r\n      break;\r\n    case ct.startsWith(\"text/\"):\r\n      logger.log(await req.clone().text());\r\n      break;\r\n    case ct === \"multipart/form-data\": {\r\n      const body = await req.clone().formData();\r\n      for (const [k, v] of body) {\r\n        const vlabel = v instanceof Blob ? \"<Blob>\" : v;\r\n        logger.log(`${k}: ${vlabel}`);\r\n      }\r\n      break;\r\n    }\r\n    default:\r\n      logger.log(`<${contentType}>`);\r\n      break;\r\n  }\r\n  logger.groupEnd();\r\n\r\n  logger.groupEnd();\r\n}\r\n\r\nasync function logResponse(\r\n  logger: Logger | undefined,\r\n  res: Response,\r\n  req: Request,\r\n) {\r\n  if (!logger) {\r\n    return;\r\n  }\r\n\r\n  const contentType = res.headers.get(\"content-type\");\r\n  const ct = contentType?.split(\";\")[0] || \"\";\r\n\r\n  logger.group(`< Response: ${req.method} ${req.url}`);\r\n  logger.log(\"Status Code:\", res.status, res.statusText);\r\n\r\n  logger.group(\"Headers:\");\r\n  for (const [k, v] of res.headers.entries()) {\r\n    logger.log(`${k}: ${v}`);\r\n  }\r\n  logger.groupEnd();\r\n\r\n  logger.group(\"Body:\");\r\n  switch (true) {\r\n    case matchContentType(res, \"application/json\")\r\n      || jsonLikeContentTypeRE.test(ct):\r\n      logger.log(await res.clone().json());\r\n      break;\r\n    case matchContentType(res, \"text/event-stream\"):\r\n      logger.log(`<${contentType}>`);\r\n      break;\r\n    case matchContentType(res, \"text/*\"):\r\n      logger.log(await res.clone().text());\r\n      break;\r\n    case matchContentType(res, \"multipart/form-data\"): {\r\n      const body = await res.clone().formData();\r\n      for (const [k, v] of body) {\r\n        const vlabel = v instanceof Blob ? \"<Blob>\" : v;\r\n        logger.log(`${k}: ${vlabel}`);\r\n      }\r\n      break;\r\n    }\r\n    default:\r\n      logger.log(`<${contentType}>`);\r\n      break;\r\n  }\r\n  logger.groupEnd();\r\n\r\n  logger.groupEnd();\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}