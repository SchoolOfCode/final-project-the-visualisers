{"ast":null,"code":"\"use strict\";\n\n/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GithubRepositoryOut$ = exports.GithubRepositoryOut$outboundSchema = exports.GithubRepositoryOut$inboundSchema = exports.GithubRepositoryOutType$ = exports.GithubRepositoryOutType$outboundSchema = exports.GithubRepositoryOutType$inboundSchema = exports.GithubRepositoryOutType = void 0;\nconst z = __importStar(require(\"zod\"));\nconst primitives_js_1 = require(\"../../lib/primitives.js\");\nexports.GithubRepositoryOutType = {\n  Github: \"github\"\n};\n/** @internal */\nexports.GithubRepositoryOutType$inboundSchema = z.nativeEnum(exports.GithubRepositoryOutType);\n/** @internal */\nexports.GithubRepositoryOutType$outboundSchema = exports.GithubRepositoryOutType$inboundSchema;\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar GithubRepositoryOutType$;\n(function (GithubRepositoryOutType$) {\n  /** @deprecated use `GithubRepositoryOutType$inboundSchema` instead. */\n  GithubRepositoryOutType$.inboundSchema = exports.GithubRepositoryOutType$inboundSchema;\n  /** @deprecated use `GithubRepositoryOutType$outboundSchema` instead. */\n  GithubRepositoryOutType$.outboundSchema = exports.GithubRepositoryOutType$outboundSchema;\n})(GithubRepositoryOutType$ || (exports.GithubRepositoryOutType$ = GithubRepositoryOutType$ = {}));\n/** @internal */\nexports.GithubRepositoryOut$inboundSchema = z.object({\n  type: z.literal(\"github\").default(\"github\"),\n  name: z.string(),\n  owner: z.string(),\n  ref: z.nullable(z.string()).optional(),\n  weight: z.number().default(1),\n  commit_id: z.string()\n}).transform(v => {\n  return (0, primitives_js_1.remap)(v, {\n    \"commit_id\": \"commitId\"\n  });\n});\n/** @internal */\nexports.GithubRepositoryOut$outboundSchema = z.object({\n  type: z.literal(\"github\").default(\"github\"),\n  name: z.string(),\n  owner: z.string(),\n  ref: z.nullable(z.string()).optional(),\n  weight: z.number().default(1),\n  commitId: z.string()\n}).transform(v => {\n  return (0, primitives_js_1.remap)(v, {\n    commitId: \"commit_id\"\n  });\n});\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar GithubRepositoryOut$;\n(function (GithubRepositoryOut$) {\n  /** @deprecated use `GithubRepositoryOut$inboundSchema` instead. */\n  GithubRepositoryOut$.inboundSchema = exports.GithubRepositoryOut$inboundSchema;\n  /** @deprecated use `GithubRepositoryOut$outboundSchema` instead. */\n  GithubRepositoryOut$.outboundSchema = exports.GithubRepositoryOut$outboundSchema;\n})(GithubRepositoryOut$ || (exports.GithubRepositoryOut$ = GithubRepositoryOut$ = {}));","map":{"version":3,"names":["z","__importStar","require","primitives_js_1","exports","GithubRepositoryOutType","Github","GithubRepositoryOutType$inboundSchema","nativeEnum","GithubRepositoryOutType$outboundSchema","GithubRepositoryOutType$","inboundSchema","outboundSchema","GithubRepositoryOut$inboundSchema","object","type","literal","default","name","string","owner","ref","nullable","optional","weight","number","commit_id","transform","v","remap","GithubRepositoryOut$outboundSchema","commitId","GithubRepositoryOut$"],"sources":["C:\\Users\\silvi\\OneDrive\\Escritorio\\LUISDEEEE\\School of code\\week 13\\final-project-the-visualisers\\node_modules\\@mistralai\\mistralai\\src\\models\\components\\githubrepositoryout.ts"],"sourcesContent":["/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\r\n\r\nimport * as z from \"zod\";\r\nimport { remap as remap$ } from \"../../lib/primitives.js\";\r\nimport { ClosedEnum } from \"../../types/enums.js\";\r\n\r\nexport const GithubRepositoryOutType = {\r\n  Github: \"github\",\r\n} as const;\r\nexport type GithubRepositoryOutType = ClosedEnum<\r\n  typeof GithubRepositoryOutType\r\n>;\r\n\r\nexport type GithubRepositoryOut = {\r\n  type?: \"github\" | undefined;\r\n  name: string;\r\n  owner: string;\r\n  ref?: string | null | undefined;\r\n  weight?: number | undefined;\r\n  commitId: string;\r\n};\r\n\r\n/** @internal */\r\nexport const GithubRepositoryOutType$inboundSchema: z.ZodNativeEnum<\r\n  typeof GithubRepositoryOutType\r\n> = z.nativeEnum(GithubRepositoryOutType);\r\n\r\n/** @internal */\r\nexport const GithubRepositoryOutType$outboundSchema: z.ZodNativeEnum<\r\n  typeof GithubRepositoryOutType\r\n> = GithubRepositoryOutType$inboundSchema;\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace GithubRepositoryOutType$ {\r\n  /** @deprecated use `GithubRepositoryOutType$inboundSchema` instead. */\r\n  export const inboundSchema = GithubRepositoryOutType$inboundSchema;\r\n  /** @deprecated use `GithubRepositoryOutType$outboundSchema` instead. */\r\n  export const outboundSchema = GithubRepositoryOutType$outboundSchema;\r\n}\r\n\r\n/** @internal */\r\nexport const GithubRepositoryOut$inboundSchema: z.ZodType<\r\n  GithubRepositoryOut,\r\n  z.ZodTypeDef,\r\n  unknown\r\n> = z.object({\r\n  type: z.literal(\"github\").default(\"github\"),\r\n  name: z.string(),\r\n  owner: z.string(),\r\n  ref: z.nullable(z.string()).optional(),\r\n  weight: z.number().default(1),\r\n  commit_id: z.string(),\r\n}).transform((v) => {\r\n  return remap$(v, {\r\n    \"commit_id\": \"commitId\",\r\n  });\r\n});\r\n\r\n/** @internal */\r\nexport type GithubRepositoryOut$Outbound = {\r\n  type: \"github\";\r\n  name: string;\r\n  owner: string;\r\n  ref?: string | null | undefined;\r\n  weight: number;\r\n  commit_id: string;\r\n};\r\n\r\n/** @internal */\r\nexport const GithubRepositoryOut$outboundSchema: z.ZodType<\r\n  GithubRepositoryOut$Outbound,\r\n  z.ZodTypeDef,\r\n  GithubRepositoryOut\r\n> = z.object({\r\n  type: z.literal(\"github\").default(\"github\"),\r\n  name: z.string(),\r\n  owner: z.string(),\r\n  ref: z.nullable(z.string()).optional(),\r\n  weight: z.number().default(1),\r\n  commitId: z.string(),\r\n}).transform((v) => {\r\n  return remap$(v, {\r\n    commitId: \"commit_id\",\r\n  });\r\n});\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace GithubRepositoryOut$ {\r\n  /** @deprecated use `GithubRepositoryOut$inboundSchema` instead. */\r\n  export const inboundSchema = GithubRepositoryOut$inboundSchema;\r\n  /** @deprecated use `GithubRepositoryOut$outboundSchema` instead. */\r\n  export const outboundSchema = GithubRepositoryOut$outboundSchema;\r\n  /** @deprecated use `GithubRepositoryOut$Outbound` instead. */\r\n  export type Outbound = GithubRepositoryOut$Outbound;\r\n}\r\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAAA,CAAA,GAAAC,YAAA,CAAAC,OAAA;AACA,MAAAC,eAAA,GAAAD,OAAA;AAGaE,OAAA,CAAAC,uBAAuB,GAAG;EACrCC,MAAM,EAAE;CACA;AAcV;AACaF,OAAA,CAAAG,qCAAqC,GAE9CP,CAAC,CAACQ,UAAU,CAACJ,OAAA,CAAAC,uBAAuB,CAAC;AAEzC;AACaD,OAAA,CAAAK,sCAAsC,GAE/CL,OAAA,CAAAG,qCAAqC;AAEzC;;;;AAIA,IAAiBG,wBAAwB;AAAzC,WAAiBA,wBAAwB;EACvC;EACaA,wBAAA,CAAAC,aAAa,GAAGP,OAAA,CAAAG,qCAAqC;EAClE;EACaG,wBAAA,CAAAE,cAAc,GAAGR,OAAA,CAAAK,sCAAsC;AACtE,CAAC,EALgBC,wBAAwB,KAAAN,OAAA,CAAAM,wBAAA,GAAxBA,wBAAwB;AAOzC;AACaN,OAAA,CAAAS,iCAAiC,GAI1Cb,CAAC,CAACc,MAAM,CAAC;EACXC,IAAI,EAAEf,CAAC,CAACgB,OAAO,CAAC,QAAQ,CAAC,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC3CC,IAAI,EAAElB,CAAC,CAACmB,MAAM,EAAE;EAChBC,KAAK,EAAEpB,CAAC,CAACmB,MAAM,EAAE;EACjBE,GAAG,EAAErB,CAAC,CAACsB,QAAQ,CAACtB,CAAC,CAACmB,MAAM,EAAE,CAAC,CAACI,QAAQ,EAAE;EACtCC,MAAM,EAAExB,CAAC,CAACyB,MAAM,EAAE,CAACR,OAAO,CAAC,CAAC,CAAC;EAC7BS,SAAS,EAAE1B,CAAC,CAACmB,MAAM;CACpB,CAAC,CAACQ,SAAS,CAAEC,CAAC,IAAI;EACjB,OAAO,IAAAzB,eAAA,CAAA0B,KAAM,EAACD,CAAC,EAAE;IACf,WAAW,EAAE;GACd,CAAC;AACJ,CAAC,CAAC;AAYF;AACaxB,OAAA,CAAA0B,kCAAkC,GAI3C9B,CAAC,CAACc,MAAM,CAAC;EACXC,IAAI,EAAEf,CAAC,CAACgB,OAAO,CAAC,QAAQ,CAAC,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC3CC,IAAI,EAAElB,CAAC,CAACmB,MAAM,EAAE;EAChBC,KAAK,EAAEpB,CAAC,CAACmB,MAAM,EAAE;EACjBE,GAAG,EAAErB,CAAC,CAACsB,QAAQ,CAACtB,CAAC,CAACmB,MAAM,EAAE,CAAC,CAACI,QAAQ,EAAE;EACtCC,MAAM,EAAExB,CAAC,CAACyB,MAAM,EAAE,CAACR,OAAO,CAAC,CAAC,CAAC;EAC7Bc,QAAQ,EAAE/B,CAAC,CAACmB,MAAM;CACnB,CAAC,CAACQ,SAAS,CAAEC,CAAC,IAAI;EACjB,OAAO,IAAAzB,eAAA,CAAA0B,KAAM,EAACD,CAAC,EAAE;IACfG,QAAQ,EAAE;GACX,CAAC;AACJ,CAAC,CAAC;AAEF;;;;AAIA,IAAiBC,oBAAoB;AAArC,WAAiBA,oBAAoB;EACnC;EACaA,oBAAA,CAAArB,aAAa,GAAGP,OAAA,CAAAS,iCAAiC;EAC9D;EACamB,oBAAA,CAAApB,cAAc,GAAGR,OAAA,CAAA0B,kCAAkC;AAGlE,CAAC,EAPgBE,oBAAoB,KAAA5B,OAAA,CAAA4B,oBAAA,GAApBA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}