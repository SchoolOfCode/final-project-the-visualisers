{"ast":null,"code":"\"use strict\";\n\n/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ToolCall$ = exports.ToolCall$outboundSchema = exports.ToolCall$inboundSchema = void 0;\nconst z = __importStar(require(\"zod\"));\nconst functioncall_js_1 = require(\"./functioncall.js\");\nconst tooltypes_js_1 = require(\"./tooltypes.js\");\n/** @internal */\nexports.ToolCall$inboundSchema = z.object({\n  id: z.string().default(\"null\"),\n  type: tooltypes_js_1.ToolTypes$inboundSchema.optional(),\n  function: functioncall_js_1.FunctionCall$inboundSchema\n});\n/** @internal */\nexports.ToolCall$outboundSchema = z.object({\n  id: z.string().default(\"null\"),\n  type: tooltypes_js_1.ToolTypes$outboundSchema.optional(),\n  function: functioncall_js_1.FunctionCall$outboundSchema\n});\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nvar ToolCall$;\n(function (ToolCall$) {\n  /** @deprecated use `ToolCall$inboundSchema` instead. */\n  ToolCall$.inboundSchema = exports.ToolCall$inboundSchema;\n  /** @deprecated use `ToolCall$outboundSchema` instead. */\n  ToolCall$.outboundSchema = exports.ToolCall$outboundSchema;\n})(ToolCall$ || (exports.ToolCall$ = ToolCall$ = {}));","map":{"version":3,"names":["z","__importStar","require","functioncall_js_1","tooltypes_js_1","exports","ToolCall$inboundSchema","object","id","string","default","type","ToolTypes$inboundSchema","optional","function","FunctionCall$inboundSchema","ToolCall$outboundSchema","ToolTypes$outboundSchema","FunctionCall$outboundSchema","ToolCall$","inboundSchema","outboundSchema"],"sources":["/Users/emilijablinkeviciute/Desktop/REPOS/Visualisers project/final-project-the-visualisers/my-app/node_modules/@mistralai/mistralai/src/models/components/toolcall.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport {\n  FunctionCall,\n  FunctionCall$inboundSchema,\n  FunctionCall$Outbound,\n  FunctionCall$outboundSchema,\n} from \"./functioncall.js\";\nimport {\n  ToolTypes,\n  ToolTypes$inboundSchema,\n  ToolTypes$outboundSchema,\n} from \"./tooltypes.js\";\n\nexport type ToolCall = {\n  id?: string | undefined;\n  type?: ToolTypes | undefined;\n  function: FunctionCall;\n};\n\n/** @internal */\nexport const ToolCall$inboundSchema: z.ZodType<\n  ToolCall,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string().default(\"null\"),\n  type: ToolTypes$inboundSchema.optional(),\n  function: FunctionCall$inboundSchema,\n});\n\n/** @internal */\nexport type ToolCall$Outbound = {\n  id: string;\n  type?: string | undefined;\n  function: FunctionCall$Outbound;\n};\n\n/** @internal */\nexport const ToolCall$outboundSchema: z.ZodType<\n  ToolCall$Outbound,\n  z.ZodTypeDef,\n  ToolCall\n> = z.object({\n  id: z.string().default(\"null\"),\n  type: ToolTypes$outboundSchema.optional(),\n  function: FunctionCall$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ToolCall$ {\n  /** @deprecated use `ToolCall$inboundSchema` instead. */\n  export const inboundSchema = ToolCall$inboundSchema;\n  /** @deprecated use `ToolCall$outboundSchema` instead. */\n  export const outboundSchema = ToolCall$outboundSchema;\n  /** @deprecated use `ToolCall$Outbound` instead. */\n  export type Outbound = ToolCall$Outbound;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAAA,CAAA,GAAAC,YAAA,CAAAC,OAAA;AACA,MAAAC,iBAAA,GAAAD,OAAA;AAMA,MAAAE,cAAA,GAAAF,OAAA;AAYA;AACaG,OAAA,CAAAC,sBAAsB,GAI/BN,CAAC,CAACO,MAAM,CAAC;EACXC,EAAE,EAAER,CAAC,CAACS,MAAM,EAAE,CAACC,OAAO,CAAC,MAAM,CAAC;EAC9BC,IAAI,EAAEP,cAAA,CAAAQ,uBAAuB,CAACC,QAAQ,EAAE;EACxCC,QAAQ,EAAEX,iBAAA,CAAAY;CACX,CAAC;AASF;AACaV,OAAA,CAAAW,uBAAuB,GAIhChB,CAAC,CAACO,MAAM,CAAC;EACXC,EAAE,EAAER,CAAC,CAACS,MAAM,EAAE,CAACC,OAAO,CAAC,MAAM,CAAC;EAC9BC,IAAI,EAAEP,cAAA,CAAAa,wBAAwB,CAACJ,QAAQ,EAAE;EACzCC,QAAQ,EAAEX,iBAAA,CAAAe;CACX,CAAC;AAEF;;;;AAIA,IAAiBC,SAAS;AAA1B,WAAiBA,SAAS;EACxB;EACaA,SAAA,CAAAC,aAAa,GAAGf,OAAA,CAAAC,sBAAsB;EACnD;EACaa,SAAA,CAAAE,cAAc,GAAGhB,OAAA,CAAAW,uBAAuB;AAGvD,CAAC,EAPgBG,SAAS,KAAAd,OAAA,CAAAc,SAAA,GAATA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}