{"ast":null,"code":"\"use strict\";\n\n/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResponseFormats$ = exports.ResponseFormats$outboundSchema = exports.ResponseFormats$inboundSchema = exports.ResponseFormats = void 0;\nconst z = __importStar(require(\"zod\"));\n/**\r\n * An object specifying the format that the model must output. Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which guarantees the message the model generates is in JSON. When using JSON mode you MUST also instruct the model to produce JSON yourself with a system or a user message.\r\n */\nexports.ResponseFormats = {\n  Text: \"text\",\n  JsonObject: \"json_object\"\n};\n/** @internal */\nexports.ResponseFormats$inboundSchema = z.nativeEnum(exports.ResponseFormats);\n/** @internal */\nexports.ResponseFormats$outboundSchema = exports.ResponseFormats$inboundSchema;\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar ResponseFormats$;\n(function (ResponseFormats$) {\n  /** @deprecated use `ResponseFormats$inboundSchema` instead. */\n  ResponseFormats$.inboundSchema = exports.ResponseFormats$inboundSchema;\n  /** @deprecated use `ResponseFormats$outboundSchema` instead. */\n  ResponseFormats$.outboundSchema = exports.ResponseFormats$outboundSchema;\n})(ResponseFormats$ || (exports.ResponseFormats$ = ResponseFormats$ = {}));","map":{"version":3,"names":["z","__importStar","require","exports","ResponseFormats","Text","JsonObject","ResponseFormats$inboundSchema","nativeEnum","ResponseFormats$outboundSchema","ResponseFormats$","inboundSchema","outboundSchema"],"sources":["C:\\Users\\silvi\\OneDrive\\Escritorio\\LUISDEEEE\\School of code\\week 13\\final-project-the-visualisers\\node_modules\\@mistralai\\mistralai\\src\\models\\components\\responseformats.ts"],"sourcesContent":["/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\r\n\r\nimport * as z from \"zod\";\r\nimport { ClosedEnum } from \"../../types/enums.js\";\r\n\r\n/**\r\n * An object specifying the format that the model must output. Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which guarantees the message the model generates is in JSON. When using JSON mode you MUST also instruct the model to produce JSON yourself with a system or a user message.\r\n */\r\nexport const ResponseFormats = {\r\n  Text: \"text\",\r\n  JsonObject: \"json_object\",\r\n} as const;\r\n/**\r\n * An object specifying the format that the model must output. Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which guarantees the message the model generates is in JSON. When using JSON mode you MUST also instruct the model to produce JSON yourself with a system or a user message.\r\n */\r\nexport type ResponseFormats = ClosedEnum<typeof ResponseFormats>;\r\n\r\n/** @internal */\r\nexport const ResponseFormats$inboundSchema: z.ZodNativeEnum<\r\n  typeof ResponseFormats\r\n> = z.nativeEnum(ResponseFormats);\r\n\r\n/** @internal */\r\nexport const ResponseFormats$outboundSchema: z.ZodNativeEnum<\r\n  typeof ResponseFormats\r\n> = ResponseFormats$inboundSchema;\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace ResponseFormats$ {\r\n  /** @deprecated use `ResponseFormats$inboundSchema` instead. */\r\n  export const inboundSchema = ResponseFormats$inboundSchema;\r\n  /** @deprecated use `ResponseFormats$outboundSchema` instead. */\r\n  export const outboundSchema = ResponseFormats$outboundSchema;\r\n}\r\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAAA,CAAA,GAAAC,YAAA,CAAAC,OAAA;AAGA;;;AAGaC,OAAA,CAAAC,eAAe,GAAG;EAC7BC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE;CACJ;AAMV;AACaH,OAAA,CAAAI,6BAA6B,GAEtCP,CAAC,CAACQ,UAAU,CAACL,OAAA,CAAAC,eAAe,CAAC;AAEjC;AACaD,OAAA,CAAAM,8BAA8B,GAEvCN,OAAA,CAAAI,6BAA6B;AAEjC;;;;AAIA,IAAiBG,gBAAgB;AAAjC,WAAiBA,gBAAgB;EAC/B;EACaA,gBAAA,CAAAC,aAAa,GAAGR,OAAA,CAAAI,6BAA6B;EAC1D;EACaG,gBAAA,CAAAE,cAAc,GAAGT,OAAA,CAAAM,8BAA8B;AAC9D,CAAC,EALgBC,gBAAgB,KAAAP,OAAA,CAAAO,gBAAA,GAAhBA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}