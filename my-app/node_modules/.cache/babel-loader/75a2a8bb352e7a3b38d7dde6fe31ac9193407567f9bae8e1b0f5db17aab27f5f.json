{"ast":null,"code":"\"use strict\";\n\n/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SystemMessage$ = exports.SystemMessage$outboundSchema = exports.SystemMessage$inboundSchema = exports.Role$ = exports.Role$outboundSchema = exports.Role$inboundSchema = exports.Content$ = exports.Content$outboundSchema = exports.Content$inboundSchema = exports.Role = void 0;\nconst z = __importStar(require(\"zod\"));\nconst textchunk_js_1 = require(\"./textchunk.js\");\nexports.Role = {\n  System: \"system\"\n};\n/** @internal */\nexports.Content$inboundSchema = z.union([z.string(), z.array(textchunk_js_1.TextChunk$inboundSchema)]);\n/** @internal */\nexports.Content$outboundSchema = z.union([z.string(), z.array(textchunk_js_1.TextChunk$outboundSchema)]);\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar Content$;\n(function (Content$) {\n  /** @deprecated use `Content$inboundSchema` instead. */\n  Content$.inboundSchema = exports.Content$inboundSchema;\n  /** @deprecated use `Content$outboundSchema` instead. */\n  Content$.outboundSchema = exports.Content$outboundSchema;\n})(Content$ || (exports.Content$ = Content$ = {}));\n/** @internal */\nexports.Role$inboundSchema = z.nativeEnum(exports.Role);\n/** @internal */\nexports.Role$outboundSchema = exports.Role$inboundSchema;\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar Role$;\n(function (Role$) {\n  /** @deprecated use `Role$inboundSchema` instead. */\n  Role$.inboundSchema = exports.Role$inboundSchema;\n  /** @deprecated use `Role$outboundSchema` instead. */\n  Role$.outboundSchema = exports.Role$outboundSchema;\n})(Role$ || (exports.Role$ = Role$ = {}));\n/** @internal */\nexports.SystemMessage$inboundSchema = z.object({\n  content: z.union([z.string(), z.array(textchunk_js_1.TextChunk$inboundSchema)]),\n  role: exports.Role$inboundSchema.default(\"system\")\n});\n/** @internal */\nexports.SystemMessage$outboundSchema = z.object({\n  content: z.union([z.string(), z.array(textchunk_js_1.TextChunk$outboundSchema)]),\n  role: exports.Role$outboundSchema.default(\"system\")\n});\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar SystemMessage$;\n(function (SystemMessage$) {\n  /** @deprecated use `SystemMessage$inboundSchema` instead. */\n  SystemMessage$.inboundSchema = exports.SystemMessage$inboundSchema;\n  /** @deprecated use `SystemMessage$outboundSchema` instead. */\n  SystemMessage$.outboundSchema = exports.SystemMessage$outboundSchema;\n})(SystemMessage$ || (exports.SystemMessage$ = SystemMessage$ = {}));","map":{"version":3,"names":["z","__importStar","require","textchunk_js_1","exports","Role","System","Content$inboundSchema","union","string","array","TextChunk$inboundSchema","Content$outboundSchema","TextChunk$outboundSchema","Content$","inboundSchema","outboundSchema","Role$inboundSchema","nativeEnum","Role$outboundSchema","Role$","SystemMessage$inboundSchema","object","content","role","default","SystemMessage$outboundSchema","SystemMessage$"],"sources":["C:\\Users\\silvi\\OneDrive\\Escritorio\\LUISDEEEE\\School of code\\WEEK 12 FINAL HACKATON\\HistoriansRule\\node_modules\\@mistralai\\mistralai\\src\\models\\components\\systemmessage.ts"],"sourcesContent":["/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\r\n\r\nimport * as z from \"zod\";\r\nimport { ClosedEnum } from \"../../types/enums.js\";\r\nimport {\r\n  TextChunk,\r\n  TextChunk$inboundSchema,\r\n  TextChunk$Outbound,\r\n  TextChunk$outboundSchema,\r\n} from \"./textchunk.js\";\r\n\r\nexport type Content = string | Array<TextChunk>;\r\n\r\nexport const Role = {\r\n  System: \"system\",\r\n} as const;\r\nexport type Role = ClosedEnum<typeof Role>;\r\n\r\nexport type SystemMessage = {\r\n  content: string | Array<TextChunk>;\r\n  role?: Role | undefined;\r\n};\r\n\r\n/** @internal */\r\nexport const Content$inboundSchema: z.ZodType<Content, z.ZodTypeDef, unknown> =\r\n  z.union([z.string(), z.array(TextChunk$inboundSchema)]);\r\n\r\n/** @internal */\r\nexport type Content$Outbound = string | Array<TextChunk$Outbound>;\r\n\r\n/** @internal */\r\nexport const Content$outboundSchema: z.ZodType<\r\n  Content$Outbound,\r\n  z.ZodTypeDef,\r\n  Content\r\n> = z.union([z.string(), z.array(TextChunk$outboundSchema)]);\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace Content$ {\r\n  /** @deprecated use `Content$inboundSchema` instead. */\r\n  export const inboundSchema = Content$inboundSchema;\r\n  /** @deprecated use `Content$outboundSchema` instead. */\r\n  export const outboundSchema = Content$outboundSchema;\r\n  /** @deprecated use `Content$Outbound` instead. */\r\n  export type Outbound = Content$Outbound;\r\n}\r\n\r\n/** @internal */\r\nexport const Role$inboundSchema: z.ZodNativeEnum<typeof Role> = z.nativeEnum(\r\n  Role,\r\n);\r\n\r\n/** @internal */\r\nexport const Role$outboundSchema: z.ZodNativeEnum<typeof Role> =\r\n  Role$inboundSchema;\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace Role$ {\r\n  /** @deprecated use `Role$inboundSchema` instead. */\r\n  export const inboundSchema = Role$inboundSchema;\r\n  /** @deprecated use `Role$outboundSchema` instead. */\r\n  export const outboundSchema = Role$outboundSchema;\r\n}\r\n\r\n/** @internal */\r\nexport const SystemMessage$inboundSchema: z.ZodType<\r\n  SystemMessage,\r\n  z.ZodTypeDef,\r\n  unknown\r\n> = z.object({\r\n  content: z.union([z.string(), z.array(TextChunk$inboundSchema)]),\r\n  role: Role$inboundSchema.default(\"system\"),\r\n});\r\n\r\n/** @internal */\r\nexport type SystemMessage$Outbound = {\r\n  content: string | Array<TextChunk$Outbound>;\r\n  role: string;\r\n};\r\n\r\n/** @internal */\r\nexport const SystemMessage$outboundSchema: z.ZodType<\r\n  SystemMessage$Outbound,\r\n  z.ZodTypeDef,\r\n  SystemMessage\r\n> = z.object({\r\n  content: z.union([z.string(), z.array(TextChunk$outboundSchema)]),\r\n  role: Role$outboundSchema.default(\"system\"),\r\n});\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace SystemMessage$ {\r\n  /** @deprecated use `SystemMessage$inboundSchema` instead. */\r\n  export const inboundSchema = SystemMessage$inboundSchema;\r\n  /** @deprecated use `SystemMessage$outboundSchema` instead. */\r\n  export const outboundSchema = SystemMessage$outboundSchema;\r\n  /** @deprecated use `SystemMessage$Outbound` instead. */\r\n  export type Outbound = SystemMessage$Outbound;\r\n}\r\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAAA,CAAA,GAAAC,YAAA,CAAAC,OAAA;AAEA,MAAAC,cAAA,GAAAD,OAAA;AASaE,OAAA,CAAAC,IAAI,GAAG;EAClBC,MAAM,EAAE;CACA;AAQV;AACaF,OAAA,CAAAG,qBAAqB,GAChCP,CAAC,CAACQ,KAAK,CAAC,CAACR,CAAC,CAACS,MAAM,EAAE,EAAET,CAAC,CAACU,KAAK,CAACP,cAAA,CAAAQ,uBAAuB,CAAC,CAAC,CAAC;AAKzD;AACaP,OAAA,CAAAQ,sBAAsB,GAI/BZ,CAAC,CAACQ,KAAK,CAAC,CAACR,CAAC,CAACS,MAAM,EAAE,EAAET,CAAC,CAACU,KAAK,CAACP,cAAA,CAAAU,wBAAwB,CAAC,CAAC,CAAC;AAE5D;;;;AAIA,IAAiBC,QAAQ;AAAzB,WAAiBA,QAAQ;EACvB;EACaA,QAAA,CAAAC,aAAa,GAAGX,OAAA,CAAAG,qBAAqB;EAClD;EACaO,QAAA,CAAAE,cAAc,GAAGZ,OAAA,CAAAQ,sBAAsB;AAGtD,CAAC,EAPgBE,QAAQ,KAAAV,OAAA,CAAAU,QAAA,GAARA,QAAQ;AASzB;AACaV,OAAA,CAAAa,kBAAkB,GAAiCjB,CAAC,CAACkB,UAAU,CAC1Ed,OAAA,CAAAC,IAAI,CACL;AAED;AACaD,OAAA,CAAAe,mBAAmB,GAC9Bf,OAAA,CAAAa,kBAAkB;AAEpB;;;;AAIA,IAAiBG,KAAK;AAAtB,WAAiBA,KAAK;EACpB;EACaA,KAAA,CAAAL,aAAa,GAAGX,OAAA,CAAAa,kBAAkB;EAC/C;EACaG,KAAA,CAAAJ,cAAc,GAAGZ,OAAA,CAAAe,mBAAmB;AACnD,CAAC,EALgBC,KAAK,KAAAhB,OAAA,CAAAgB,KAAA,GAALA,KAAK;AAOtB;AACahB,OAAA,CAAAiB,2BAA2B,GAIpCrB,CAAC,CAACsB,MAAM,CAAC;EACXC,OAAO,EAAEvB,CAAC,CAACQ,KAAK,CAAC,CAACR,CAAC,CAACS,MAAM,EAAE,EAAET,CAAC,CAACU,KAAK,CAACP,cAAA,CAAAQ,uBAAuB,CAAC,CAAC,CAAC;EAChEa,IAAI,EAAEpB,OAAA,CAAAa,kBAAkB,CAACQ,OAAO,CAAC,QAAQ;CAC1C,CAAC;AAQF;AACarB,OAAA,CAAAsB,4BAA4B,GAIrC1B,CAAC,CAACsB,MAAM,CAAC;EACXC,OAAO,EAAEvB,CAAC,CAACQ,KAAK,CAAC,CAACR,CAAC,CAACS,MAAM,EAAE,EAAET,CAAC,CAACU,KAAK,CAACP,cAAA,CAAAU,wBAAwB,CAAC,CAAC,CAAC;EACjEW,IAAI,EAAEpB,OAAA,CAAAe,mBAAmB,CAACM,OAAO,CAAC,QAAQ;CAC3C,CAAC;AAEF;;;;AAIA,IAAiBE,cAAc;AAA/B,WAAiBA,cAAc;EAC7B;EACaA,cAAA,CAAAZ,aAAa,GAAGX,OAAA,CAAAiB,2BAA2B;EACxD;EACaM,cAAA,CAAAX,cAAc,GAAGZ,OAAA,CAAAsB,4BAA4B;AAG5D,CAAC,EAPgBC,cAAc,KAAAvB,OAAA,CAAAuB,cAAA,GAAdA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}