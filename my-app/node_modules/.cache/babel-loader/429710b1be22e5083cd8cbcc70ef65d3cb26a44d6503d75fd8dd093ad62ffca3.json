{"ast":null,"code":"\"use strict\";\n\n/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filesUpload = filesUpload;\nconst files_js_1 = require(\"../lib/files.js\");\nconst m$ = __importStar(require(\"../lib/matchers.js\"));\nconst schemas$ = __importStar(require(\"../lib/schemas.js\"));\nconst security_js_1 = require(\"../lib/security.js\");\nconst url_js_1 = require(\"../lib/url.js\");\nconst components = __importStar(require(\"../models/components/index.js\"));\nconst operations = __importStar(require(\"../models/operations/index.js\"));\nconst blobs_js_1 = require(\"../types/blobs.js\");\nconst streams_js_1 = require(\"../types/streams.js\");\n/**\n * Upload File\n *\n * @remarks\n * Upload a file that can be used across various endpoints.\n *\n * The size of individual files can be a maximum of 512 MB. The Fine-tuning API only supports .jsonl files.\n *\n * Please contact us if you need to increase these storage limits.\n */\nasync function filesUpload(client$, request, options) {\n  const input$ = request;\n  const parsed$ = schemas$.safeParse(input$, value$ => operations.FilesApiRoutesUploadFileMultiPartBodyParams$outboundSchema.parse(value$), \"Input validation failed\");\n  if (!parsed$.ok) {\n    return parsed$;\n  }\n  const payload$ = parsed$.value;\n  const body$ = new FormData();\n  if ((0, blobs_js_1.isBlobLike)(payload$.file)) {\n    body$.append(\"file\", payload$.file);\n  } else if ((0, streams_js_1.isReadableStream)(payload$.file.content)) {\n    const buffer = await (0, files_js_1.readableStreamToArrayBuffer)(payload$.file.content);\n    const blob = new Blob([buffer], {\n      type: \"application/octet-stream\"\n    });\n    body$.append(\"file\", blob);\n  } else {\n    body$.append(\"file\", new Blob([payload$.file.content], {\n      type: \"application/octet-stream\"\n    }), payload$.file.fileName);\n  }\n  if (payload$.purpose !== undefined) {\n    body$.append(\"purpose\", payload$.purpose);\n  }\n  const path$ = (0, url_js_1.pathToFunc)(\"/v1/files\")();\n  const headers$ = new Headers({\n    Accept: \"application/json\"\n  });\n  const apiKey$ = await (0, security_js_1.extractSecurity)(client$.options$.apiKey);\n  const security$ = apiKey$ == null ? {} : {\n    apiKey: apiKey$\n  };\n  const context = {\n    operationID: \"files_api_routes_upload_file\",\n    oAuth2Scopes: [],\n    securitySource: client$.options$.apiKey\n  };\n  const securitySettings$ = (0, security_js_1.resolveGlobalSecurity)(security$);\n  const requestRes = client$.createRequest$(context, {\n    security: securitySettings$,\n    method: \"POST\",\n    path: path$,\n    headers: headers$,\n    body: body$,\n    timeoutMs: (options === null || options === void 0 ? void 0 : options.timeoutMs) || client$.options$.timeoutMs || -1\n  }, options);\n  if (!requestRes.ok) {\n    return requestRes;\n  }\n  const request$ = requestRes.value;\n  const doResult = await client$.do$(request$, {\n    context,\n    errorCodes: [\"4XX\", \"5XX\"],\n    retryConfig: (options === null || options === void 0 ? void 0 : options.retries) || client$.options$.retryConfig,\n    retryCodes: (options === null || options === void 0 ? void 0 : options.retryCodes) || [\"429\", \"500\", \"502\", \"503\", \"504\"]\n  });\n  if (!doResult.ok) {\n    return doResult;\n  }\n  const response = doResult.value;\n  const [result$] = await m$.match(m$.json(200, components.UploadFileOut$inboundSchema), m$.fail([\"4XX\", \"5XX\"]))(response);\n  if (!result$.ok) {\n    return result$;\n  }\n  return result$;\n}","map":{"version":3,"names":["exports","filesUpload","files_js_1","require","m$","__importStar","schemas$","security_js_1","url_js_1","components","operations","blobs_js_1","streams_js_1","client$","request","options","input$","parsed$","safeParse","value$","FilesApiRoutesUploadFileMultiPartBodyParams$outboundSchema","parse","ok","payload$","value","body$","FormData","isBlobLike","file","append","isReadableStream","content","buffer","readableStreamToArrayBuffer","blob","Blob","type","fileName","purpose","undefined","path$","pathToFunc","headers$","Headers","Accept","apiKey$","extractSecurity","options$","apiKey","security$","context","operationID","oAuth2Scopes","securitySource","securitySettings$","resolveGlobalSecurity","requestRes","createRequest$","security","method","path","headers","body","timeoutMs","request$","doResult","do$","errorCodes","retryConfig","retries","retryCodes","response","result$","match","json","UploadFileOut$inboundSchema","fail"],"sources":["/Users/emilijablinkeviciute/Desktop/REPOS/Visualisers project/final-project-the-visualisers/my-app/node_modules/@mistralai/mistralai/src/funcs/filesUpload.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport { MistralCore } from \"../core.js\";\nimport { readableStreamToArrayBuffer } from \"../lib/files.js\";\nimport * as m$ from \"../lib/matchers.js\";\nimport * as schemas$ from \"../lib/schemas.js\";\nimport { RequestOptions } from \"../lib/sdks.js\";\nimport { extractSecurity, resolveGlobalSecurity } from \"../lib/security.js\";\nimport { pathToFunc } from \"../lib/url.js\";\nimport * as components from \"../models/components/index.js\";\nimport {\n  ConnectionError,\n  InvalidRequestError,\n  RequestAbortedError,\n  RequestTimeoutError,\n  UnexpectedClientError,\n} from \"../models/errors/httpclienterrors.js\";\nimport { SDKError } from \"../models/errors/sdkerror.js\";\nimport { SDKValidationError } from \"../models/errors/sdkvalidationerror.js\";\nimport * as operations from \"../models/operations/index.js\";\nimport { isBlobLike } from \"../types/blobs.js\";\nimport { Result } from \"../types/fp.js\";\nimport { isReadableStream } from \"../types/streams.js\";\n\n/**\n * Upload File\n *\n * @remarks\n * Upload a file that can be used across various endpoints.\n *\n * The size of individual files can be a maximum of 512 MB. The Fine-tuning API only supports .jsonl files.\n *\n * Please contact us if you need to increase these storage limits.\n */\nexport async function filesUpload(\n  client$: MistralCore,\n  request: operations.FilesApiRoutesUploadFileMultiPartBodyParams,\n  options?: RequestOptions,\n): Promise<\n  Result<\n    components.UploadFileOut,\n    | SDKError\n    | SDKValidationError\n    | UnexpectedClientError\n    | InvalidRequestError\n    | RequestAbortedError\n    | RequestTimeoutError\n    | ConnectionError\n  >\n> {\n  const input$ = request;\n\n  const parsed$ = schemas$.safeParse(\n    input$,\n    (value$) =>\n      operations.FilesApiRoutesUploadFileMultiPartBodyParams$outboundSchema\n        .parse(value$),\n    \"Input validation failed\",\n  );\n  if (!parsed$.ok) {\n    return parsed$;\n  }\n  const payload$ = parsed$.value;\n  const body$ = new FormData();\n\n  if (isBlobLike(payload$.file)) {\n    body$.append(\"file\", payload$.file);\n  } else if (isReadableStream(payload$.file.content)) {\n    const buffer = await readableStreamToArrayBuffer(payload$.file.content);\n    const blob = new Blob([buffer], { type: \"application/octet-stream\" });\n    body$.append(\"file\", blob);\n  } else {\n    body$.append(\n      \"file\",\n      new Blob([payload$.file.content], { type: \"application/octet-stream\" }),\n      payload$.file.fileName,\n    );\n  }\n  if (payload$.purpose !== undefined) {\n    body$.append(\"purpose\", payload$.purpose);\n  }\n\n  const path$ = pathToFunc(\"/v1/files\")();\n\n  const headers$ = new Headers({\n    Accept: \"application/json\",\n  });\n\n  const apiKey$ = await extractSecurity(client$.options$.apiKey);\n  const security$ = apiKey$ == null ? {} : { apiKey: apiKey$ };\n  const context = {\n    operationID: \"files_api_routes_upload_file\",\n    oAuth2Scopes: [],\n    securitySource: client$.options$.apiKey,\n  };\n  const securitySettings$ = resolveGlobalSecurity(security$);\n\n  const requestRes = client$.createRequest$(context, {\n    security: securitySettings$,\n    method: \"POST\",\n    path: path$,\n    headers: headers$,\n    body: body$,\n    timeoutMs: options?.timeoutMs || client$.options$.timeoutMs || -1,\n  }, options);\n  if (!requestRes.ok) {\n    return requestRes;\n  }\n  const request$ = requestRes.value;\n\n  const doResult = await client$.do$(request$, {\n    context,\n    errorCodes: [\"4XX\", \"5XX\"],\n    retryConfig: options?.retries\n      || client$.options$.retryConfig,\n    retryCodes: options?.retryCodes || [\"429\", \"500\", \"502\", \"503\", \"504\"],\n  });\n  if (!doResult.ok) {\n    return doResult;\n  }\n  const response = doResult.value;\n\n  const [result$] = await m$.match<\n    components.UploadFileOut,\n    | SDKError\n    | SDKValidationError\n    | UnexpectedClientError\n    | InvalidRequestError\n    | RequestAbortedError\n    | RequestTimeoutError\n    | ConnectionError\n  >(\n    m$.json(200, components.UploadFileOut$inboundSchema),\n    m$.fail([\"4XX\", \"5XX\"]),\n  )(response);\n  if (!result$.ok) {\n    return result$;\n  }\n\n  return result$;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCAA,OAAA,CAAAC,WAAA,GAAAA,WAAA;AA/BA,MAAAC,UAAA,GAAAC,OAAA;AACA,MAAAC,EAAA,GAAAC,YAAA,CAAAF,OAAA;AACA,MAAAG,QAAA,GAAAD,YAAA,CAAAF,OAAA;AAEA,MAAAI,aAAA,GAAAJ,OAAA;AACA,MAAAK,QAAA,GAAAL,OAAA;AACA,MAAAM,UAAA,GAAAJ,YAAA,CAAAF,OAAA;AAUA,MAAAO,UAAA,GAAAL,YAAA,CAAAF,OAAA;AACA,MAAAQ,UAAA,GAAAR,OAAA;AAEA,MAAAS,YAAA,GAAAT,OAAA;AAEA;;;;;;;;;;AAUO,eAAeF,WAAWA,CAC/BY,OAAoB,EACpBC,OAA+D,EAC/DC,OAAwB;EAaxB,MAAMC,MAAM,GAAGF,OAAO;EAEtB,MAAMG,OAAO,GAAGX,QAAQ,CAACY,SAAS,CAChCF,MAAM,EACLG,MAAM,IACLT,UAAU,CAACU,0DAA0D,CAClEC,KAAK,CAACF,MAAM,CAAC,EAClB,yBAAyB,CAC1B;EACD,IAAI,CAACF,OAAO,CAACK,EAAE,EAAE;IACf,OAAOL,OAAO;EAChB;EACA,MAAMM,QAAQ,GAAGN,OAAO,CAACO,KAAK;EAC9B,MAAMC,KAAK,GAAG,IAAIC,QAAQ,EAAE;EAE5B,IAAI,IAAAf,UAAA,CAAAgB,UAAU,EAACJ,QAAQ,CAACK,IAAI,CAAC,EAAE;IAC7BH,KAAK,CAACI,MAAM,CAAC,MAAM,EAAEN,QAAQ,CAACK,IAAI,CAAC;EACrC,CAAC,MAAM,IAAI,IAAAhB,YAAA,CAAAkB,gBAAgB,EAACP,QAAQ,CAACK,IAAI,CAACG,OAAO,CAAC,EAAE;IAClD,MAAMC,MAAM,GAAG,MAAM,IAAA9B,UAAA,CAAA+B,2BAA2B,EAACV,QAAQ,CAACK,IAAI,CAACG,OAAO,CAAC;IACvE,MAAMG,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,MAAM,CAAC,EAAE;MAAEI,IAAI,EAAE;IAA0B,CAAE,CAAC;IACrEX,KAAK,CAACI,MAAM,CAAC,MAAM,EAAEK,IAAI,CAAC;EAC5B,CAAC,MAAM;IACLT,KAAK,CAACI,MAAM,CACV,MAAM,EACN,IAAIM,IAAI,CAAC,CAACZ,QAAQ,CAACK,IAAI,CAACG,OAAO,CAAC,EAAE;MAAEK,IAAI,EAAE;IAA0B,CAAE,CAAC,EACvEb,QAAQ,CAACK,IAAI,CAACS,QAAQ,CACvB;EACH;EACA,IAAId,QAAQ,CAACe,OAAO,KAAKC,SAAS,EAAE;IAClCd,KAAK,CAACI,MAAM,CAAC,SAAS,EAAEN,QAAQ,CAACe,OAAO,CAAC;EAC3C;EAEA,MAAME,KAAK,GAAG,IAAAhC,QAAA,CAAAiC,UAAU,EAAC,WAAW,CAAC,EAAE;EAEvC,MAAMC,QAAQ,GAAG,IAAIC,OAAO,CAAC;IAC3BC,MAAM,EAAE;GACT,CAAC;EAEF,MAAMC,OAAO,GAAG,MAAM,IAAAtC,aAAA,CAAAuC,eAAe,EAACjC,OAAO,CAACkC,QAAQ,CAACC,MAAM,CAAC;EAC9D,MAAMC,SAAS,GAAGJ,OAAO,IAAI,IAAI,GAAG,EAAE,GAAG;IAAEG,MAAM,EAAEH;EAAO,CAAE;EAC5D,MAAMK,OAAO,GAAG;IACdC,WAAW,EAAE,8BAA8B;IAC3CC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAExC,OAAO,CAACkC,QAAQ,CAACC;GAClC;EACD,MAAMM,iBAAiB,GAAG,IAAA/C,aAAA,CAAAgD,qBAAqB,EAACN,SAAS,CAAC;EAE1D,MAAMO,UAAU,GAAG3C,OAAO,CAAC4C,cAAc,CAACP,OAAO,EAAE;IACjDQ,QAAQ,EAAEJ,iBAAiB;IAC3BK,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEpB,KAAK;IACXqB,OAAO,EAAEnB,QAAQ;IACjBoB,IAAI,EAAErC,KAAK;IACXsC,SAAS,EAAE,CAAAhD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEgD,SAAS,KAAIlD,OAAO,CAACkC,QAAQ,CAACgB,SAAS,IAAI,CAAC;GACjE,EAAEhD,OAAO,CAAC;EACX,IAAI,CAACyC,UAAU,CAAClC,EAAE,EAAE;IAClB,OAAOkC,UAAU;EACnB;EACA,MAAMQ,QAAQ,GAAGR,UAAU,CAAChC,KAAK;EAEjC,MAAMyC,QAAQ,GAAG,MAAMpD,OAAO,CAACqD,GAAG,CAACF,QAAQ,EAAE;IAC3Cd,OAAO;IACPiB,UAAU,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;IAC1BC,WAAW,EAAE,CAAArD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEsD,OAAO,KACxBxD,OAAO,CAACkC,QAAQ,CAACqB,WAAW;IACjCE,UAAU,EAAE,CAAAvD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEuD,UAAU,KAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;GACtE,CAAC;EACF,IAAI,CAACL,QAAQ,CAAC3C,EAAE,EAAE;IAChB,OAAO2C,QAAQ;EACjB;EACA,MAAMM,QAAQ,GAAGN,QAAQ,CAACzC,KAAK;EAE/B,MAAM,CAACgD,OAAO,CAAC,GAAG,MAAMpE,EAAE,CAACqE,KAAK,CAU9BrE,EAAE,CAACsE,IAAI,CAAC,GAAG,EAAEjE,UAAU,CAACkE,2BAA2B,CAAC,EACpDvE,EAAE,CAACwE,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CACxB,CAACL,QAAQ,CAAC;EACX,IAAI,CAACC,OAAO,CAAClD,EAAE,EAAE;IACf,OAAOkD,OAAO;EAChB;EAEA,OAAOA,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}