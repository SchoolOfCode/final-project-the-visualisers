{"ast":null,"code":"\"use strict\";\n\n/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompletionEvent$ = exports.CompletionEvent$outboundSchema = exports.CompletionEvent$inboundSchema = void 0;\nconst z = __importStar(require(\"zod\"));\nconst completionchunk_js_1 = require(\"./completionchunk.js\");\n/** @internal */\nexports.CompletionEvent$inboundSchema = z.object({\n  data: z.string().transform((v, ctx) => {\n    try {\n      return JSON.parse(v);\n    } catch (err) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: `malformed json: ${err}`\n      });\n      return z.NEVER;\n    }\n  }).pipe(completionchunk_js_1.CompletionChunk$inboundSchema)\n});\n/** @internal */\nexports.CompletionEvent$outboundSchema = z.object({\n  data: completionchunk_js_1.CompletionChunk$outboundSchema\n});\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nvar CompletionEvent$;\n(function (CompletionEvent$) {\n  /** @deprecated use `CompletionEvent$inboundSchema` instead. */\n  CompletionEvent$.inboundSchema = exports.CompletionEvent$inboundSchema;\n  /** @deprecated use `CompletionEvent$outboundSchema` instead. */\n  CompletionEvent$.outboundSchema = exports.CompletionEvent$outboundSchema;\n})(CompletionEvent$ || (exports.CompletionEvent$ = CompletionEvent$ = {}));","map":{"version":3,"names":["z","__importStar","require","completionchunk_js_1","exports","CompletionEvent$inboundSchema","object","data","string","transform","v","ctx","JSON","parse","err","addIssue","code","ZodIssueCode","custom","message","NEVER","pipe","CompletionChunk$inboundSchema","CompletionEvent$outboundSchema","CompletionChunk$outboundSchema","CompletionEvent$","inboundSchema","outboundSchema"],"sources":["/Users/emilijablinkeviciute/Desktop/REPOS/Visualisers project/final-project-the-visualisers/my-app/node_modules/@mistralai/mistralai/src/models/components/completionevent.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport {\n  CompletionChunk,\n  CompletionChunk$inboundSchema,\n  CompletionChunk$Outbound,\n  CompletionChunk$outboundSchema,\n} from \"./completionchunk.js\";\n\nexport type CompletionEvent = {\n  data: CompletionChunk;\n};\n\n/** @internal */\nexport const CompletionEvent$inboundSchema: z.ZodType<\n  CompletionEvent,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  data: z.string().transform((v, ctx) => {\n    try {\n      return JSON.parse(v);\n    } catch (err) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: `malformed json: ${err}`,\n      });\n      return z.NEVER;\n    }\n  }).pipe(CompletionChunk$inboundSchema),\n});\n\n/** @internal */\nexport type CompletionEvent$Outbound = {\n  data: CompletionChunk$Outbound;\n};\n\n/** @internal */\nexport const CompletionEvent$outboundSchema: z.ZodType<\n  CompletionEvent$Outbound,\n  z.ZodTypeDef,\n  CompletionEvent\n> = z.object({\n  data: CompletionChunk$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CompletionEvent$ {\n  /** @deprecated use `CompletionEvent$inboundSchema` instead. */\n  export const inboundSchema = CompletionEvent$inboundSchema;\n  /** @deprecated use `CompletionEvent$outboundSchema` instead. */\n  export const outboundSchema = CompletionEvent$outboundSchema;\n  /** @deprecated use `CompletionEvent$Outbound` instead. */\n  export type Outbound = CompletionEvent$Outbound;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAAA,CAAA,GAAAC,YAAA,CAAAC,OAAA;AACA,MAAAC,oBAAA,GAAAD,OAAA;AAWA;AACaE,OAAA,CAAAC,6BAA6B,GAItCL,CAAC,CAACM,MAAM,CAAC;EACXC,IAAI,EAAEP,CAAC,CAACQ,MAAM,EAAE,CAACC,SAAS,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAI;IACpC,IAAI;MACF,OAAOC,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZH,GAAG,CAACI,QAAQ,CAAC;QACXC,IAAI,EAAEhB,CAAC,CAACiB,YAAY,CAACC,MAAM;QAC3BC,OAAO,EAAE,mBAAmBL,GAAG;OAChC,CAAC;MACF,OAAOd,CAAC,CAACoB,KAAK;IAChB;EACF,CAAC,CAAC,CAACC,IAAI,CAAClB,oBAAA,CAAAmB,6BAA6B;CACtC,CAAC;AAOF;AACalB,OAAA,CAAAmB,8BAA8B,GAIvCvB,CAAC,CAACM,MAAM,CAAC;EACXC,IAAI,EAAEJ,oBAAA,CAAAqB;CACP,CAAC;AAEF;;;;AAIA,IAAiBC,gBAAgB;AAAjC,WAAiBA,gBAAgB;EAC/B;EACaA,gBAAA,CAAAC,aAAa,GAAGtB,OAAA,CAAAC,6BAA6B;EAC1D;EACaoB,gBAAA,CAAAE,cAAc,GAAGvB,OAAA,CAAAmB,8BAA8B;AAG9D,CAAC,EAPgBE,gBAAgB,KAAArB,OAAA,CAAAqB,gBAAA,GAAhBA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}