{"ast":null,"code":"\"use strict\";\n\n/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FIMCompletionRequest$ = exports.FIMCompletionRequest$outboundSchema = exports.FIMCompletionRequest$inboundSchema = exports.FIMCompletionRequestStop$ = exports.FIMCompletionRequestStop$outboundSchema = exports.FIMCompletionRequestStop$inboundSchema = void 0;\nconst z = __importStar(require(\"zod\"));\nconst primitives_js_1 = require(\"../../lib/primitives.js\");\n/** @internal */\nexports.FIMCompletionRequestStop$inboundSchema = z.union([z.string(), z.array(z.string())]);\n/** @internal */\nexports.FIMCompletionRequestStop$outboundSchema = z.union([z.string(), z.array(z.string())]);\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar FIMCompletionRequestStop$;\n(function (FIMCompletionRequestStop$) {\n  /** @deprecated use `FIMCompletionRequestStop$inboundSchema` instead. */\n  FIMCompletionRequestStop$.inboundSchema = exports.FIMCompletionRequestStop$inboundSchema;\n  /** @deprecated use `FIMCompletionRequestStop$outboundSchema` instead. */\n  FIMCompletionRequestStop$.outboundSchema = exports.FIMCompletionRequestStop$outboundSchema;\n})(FIMCompletionRequestStop$ || (exports.FIMCompletionRequestStop$ = FIMCompletionRequestStop$ = {}));\n/** @internal */\nexports.FIMCompletionRequest$inboundSchema = z.object({\n  model: z.nullable(z.string()),\n  temperature: z.number().default(0.7),\n  top_p: z.number().default(1),\n  max_tokens: z.nullable(z.number().int()).optional(),\n  min_tokens: z.nullable(z.number().int()).optional(),\n  stream: z.boolean().default(false),\n  stop: z.union([z.string(), z.array(z.string())]).optional(),\n  random_seed: z.nullable(z.number().int()).optional(),\n  prompt: z.string(),\n  suffix: z.nullable(z.string()).optional()\n}).transform(v => {\n  return (0, primitives_js_1.remap)(v, {\n    \"top_p\": \"topP\",\n    \"max_tokens\": \"maxTokens\",\n    \"min_tokens\": \"minTokens\",\n    \"random_seed\": \"randomSeed\"\n  });\n});\n/** @internal */\nexports.FIMCompletionRequest$outboundSchema = z.object({\n  model: z.nullable(z.string()),\n  temperature: z.number().default(0.7),\n  topP: z.number().default(1),\n  maxTokens: z.nullable(z.number().int()).optional(),\n  minTokens: z.nullable(z.number().int()).optional(),\n  stream: z.boolean().default(false),\n  stop: z.union([z.string(), z.array(z.string())]).optional(),\n  randomSeed: z.nullable(z.number().int()).optional(),\n  prompt: z.string(),\n  suffix: z.nullable(z.string()).optional()\n}).transform(v => {\n  return (0, primitives_js_1.remap)(v, {\n    topP: \"top_p\",\n    maxTokens: \"max_tokens\",\n    minTokens: \"min_tokens\",\n    randomSeed: \"random_seed\"\n  });\n});\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar FIMCompletionRequest$;\n(function (FIMCompletionRequest$) {\n  /** @deprecated use `FIMCompletionRequest$inboundSchema` instead. */\n  FIMCompletionRequest$.inboundSchema = exports.FIMCompletionRequest$inboundSchema;\n  /** @deprecated use `FIMCompletionRequest$outboundSchema` instead. */\n  FIMCompletionRequest$.outboundSchema = exports.FIMCompletionRequest$outboundSchema;\n})(FIMCompletionRequest$ || (exports.FIMCompletionRequest$ = FIMCompletionRequest$ = {}));","map":{"version":3,"names":["z","__importStar","require","primitives_js_1","exports","FIMCompletionRequestStop$inboundSchema","union","string","array","FIMCompletionRequestStop$outboundSchema","FIMCompletionRequestStop$","inboundSchema","outboundSchema","FIMCompletionRequest$inboundSchema","object","model","nullable","temperature","number","default","top_p","max_tokens","int","optional","min_tokens","stream","boolean","stop","random_seed","prompt","suffix","transform","v","remap","FIMCompletionRequest$outboundSchema","topP","maxTokens","minTokens","randomSeed","FIMCompletionRequest$"],"sources":["C:\\Users\\silvi\\OneDrive\\Escritorio\\LUISDEEEE\\School of code\\WEEK 12 FINAL HACKATON\\HistoriansRule\\node_modules\\@mistralai\\mistralai\\src\\models\\components\\fimcompletionrequest.ts"],"sourcesContent":["/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\r\n\r\nimport * as z from \"zod\";\r\nimport { remap as remap$ } from \"../../lib/primitives.js\";\r\n\r\n/**\r\n * Stop generation if this token is detected. Or if one of these tokens is detected when providing an array\r\n */\r\nexport type FIMCompletionRequestStop = string | Array<string>;\r\n\r\nexport type FIMCompletionRequest = {\r\n  /**\r\n   * ID of the model to use. Only compatible for now with:\r\n   *\r\n   * @remarks\r\n   *   - `codestral-2405`\r\n   *   - `codestral-latest`\r\n   */\r\n  model: string | null;\r\n  /**\r\n   * What sampling temperature to use, between 0.0 and 1.0. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or `top_p` but not both.\r\n   */\r\n  temperature?: number | undefined;\r\n  /**\r\n   * Nucleus sampling, where the model considers the results of the tokens with `top_p` probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or `temperature` but not both.\r\n   */\r\n  topP?: number | undefined;\r\n  /**\r\n   * The maximum number of tokens to generate in the completion. The token count of your prompt plus `max_tokens` cannot exceed the model's context length.\r\n   */\r\n  maxTokens?: number | null | undefined;\r\n  /**\r\n   * The minimum number of tokens to generate in the completion.\r\n   */\r\n  minTokens?: number | null | undefined;\r\n  /**\r\n   * Whether to stream back partial progress. If set, tokens will be sent as data-only server-side events as they become available, with the stream terminated by a data: [DONE] message. Otherwise, the server will hold the request open until the timeout or until completion, with the response containing the full result as JSON.\r\n   */\r\n  stream?: boolean | undefined;\r\n  /**\r\n   * Stop generation if this token is detected. Or if one of these tokens is detected when providing an array\r\n   */\r\n  stop?: string | Array<string> | undefined;\r\n  /**\r\n   * The seed to use for random sampling. If set, different calls will generate deterministic results.\r\n   */\r\n  randomSeed?: number | null | undefined;\r\n  /**\r\n   * The text/code to complete.\r\n   */\r\n  prompt: string;\r\n  /**\r\n   * Optional text/code that adds more context for the model. When given a `prompt` and a `suffix` the model will fill what is between them. When `suffix` is not provided, the model will simply execute completion starting with `prompt`.\r\n   */\r\n  suffix?: string | null | undefined;\r\n};\r\n\r\n/** @internal */\r\nexport const FIMCompletionRequestStop$inboundSchema: z.ZodType<\r\n  FIMCompletionRequestStop,\r\n  z.ZodTypeDef,\r\n  unknown\r\n> = z.union([z.string(), z.array(z.string())]);\r\n\r\n/** @internal */\r\nexport type FIMCompletionRequestStop$Outbound = string | Array<string>;\r\n\r\n/** @internal */\r\nexport const FIMCompletionRequestStop$outboundSchema: z.ZodType<\r\n  FIMCompletionRequestStop$Outbound,\r\n  z.ZodTypeDef,\r\n  FIMCompletionRequestStop\r\n> = z.union([z.string(), z.array(z.string())]);\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace FIMCompletionRequestStop$ {\r\n  /** @deprecated use `FIMCompletionRequestStop$inboundSchema` instead. */\r\n  export const inboundSchema = FIMCompletionRequestStop$inboundSchema;\r\n  /** @deprecated use `FIMCompletionRequestStop$outboundSchema` instead. */\r\n  export const outboundSchema = FIMCompletionRequestStop$outboundSchema;\r\n  /** @deprecated use `FIMCompletionRequestStop$Outbound` instead. */\r\n  export type Outbound = FIMCompletionRequestStop$Outbound;\r\n}\r\n\r\n/** @internal */\r\nexport const FIMCompletionRequest$inboundSchema: z.ZodType<\r\n  FIMCompletionRequest,\r\n  z.ZodTypeDef,\r\n  unknown\r\n> = z.object({\r\n  model: z.nullable(z.string()),\r\n  temperature: z.number().default(0.7),\r\n  top_p: z.number().default(1),\r\n  max_tokens: z.nullable(z.number().int()).optional(),\r\n  min_tokens: z.nullable(z.number().int()).optional(),\r\n  stream: z.boolean().default(false),\r\n  stop: z.union([z.string(), z.array(z.string())]).optional(),\r\n  random_seed: z.nullable(z.number().int()).optional(),\r\n  prompt: z.string(),\r\n  suffix: z.nullable(z.string()).optional(),\r\n}).transform((v) => {\r\n  return remap$(v, {\r\n    \"top_p\": \"topP\",\r\n    \"max_tokens\": \"maxTokens\",\r\n    \"min_tokens\": \"minTokens\",\r\n    \"random_seed\": \"randomSeed\",\r\n  });\r\n});\r\n\r\n/** @internal */\r\nexport type FIMCompletionRequest$Outbound = {\r\n  model: string | null;\r\n  temperature: number;\r\n  top_p: number;\r\n  max_tokens?: number | null | undefined;\r\n  min_tokens?: number | null | undefined;\r\n  stream: boolean;\r\n  stop?: string | Array<string> | undefined;\r\n  random_seed?: number | null | undefined;\r\n  prompt: string;\r\n  suffix?: string | null | undefined;\r\n};\r\n\r\n/** @internal */\r\nexport const FIMCompletionRequest$outboundSchema: z.ZodType<\r\n  FIMCompletionRequest$Outbound,\r\n  z.ZodTypeDef,\r\n  FIMCompletionRequest\r\n> = z.object({\r\n  model: z.nullable(z.string()),\r\n  temperature: z.number().default(0.7),\r\n  topP: z.number().default(1),\r\n  maxTokens: z.nullable(z.number().int()).optional(),\r\n  minTokens: z.nullable(z.number().int()).optional(),\r\n  stream: z.boolean().default(false),\r\n  stop: z.union([z.string(), z.array(z.string())]).optional(),\r\n  randomSeed: z.nullable(z.number().int()).optional(),\r\n  prompt: z.string(),\r\n  suffix: z.nullable(z.string()).optional(),\r\n}).transform((v) => {\r\n  return remap$(v, {\r\n    topP: \"top_p\",\r\n    maxTokens: \"max_tokens\",\r\n    minTokens: \"min_tokens\",\r\n    randomSeed: \"random_seed\",\r\n  });\r\n});\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace FIMCompletionRequest$ {\r\n  /** @deprecated use `FIMCompletionRequest$inboundSchema` instead. */\r\n  export const inboundSchema = FIMCompletionRequest$inboundSchema;\r\n  /** @deprecated use `FIMCompletionRequest$outboundSchema` instead. */\r\n  export const outboundSchema = FIMCompletionRequest$outboundSchema;\r\n  /** @deprecated use `FIMCompletionRequest$Outbound` instead. */\r\n  export type Outbound = FIMCompletionRequest$Outbound;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}