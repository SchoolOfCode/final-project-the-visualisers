{"ast":null,"code":"\"use strict\";\n\n/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextChunk$ = exports.TextChunk$outboundSchema = exports.TextChunk$inboundSchema = exports.TextChunkType$ = exports.TextChunkType$outboundSchema = exports.TextChunkType$inboundSchema = exports.TextChunkType = void 0;\nconst z = __importStar(require(\"zod\"));\nexports.TextChunkType = {\n  Text: \"text\"\n};\n/** @internal */\nexports.TextChunkType$inboundSchema = z.nativeEnum(exports.TextChunkType);\n/** @internal */\nexports.TextChunkType$outboundSchema = exports.TextChunkType$inboundSchema;\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nvar TextChunkType$;\n(function (TextChunkType$) {\n  /** @deprecated use `TextChunkType$inboundSchema` instead. */\n  TextChunkType$.inboundSchema = exports.TextChunkType$inboundSchema;\n  /** @deprecated use `TextChunkType$outboundSchema` instead. */\n  TextChunkType$.outboundSchema = exports.TextChunkType$outboundSchema;\n})(TextChunkType$ || (exports.TextChunkType$ = TextChunkType$ = {}));\n/** @internal */\nexports.TextChunk$inboundSchema = z.object({\n  type: z.literal(\"text\").default(\"text\"),\n  text: z.string()\n});\n/** @internal */\nexports.TextChunk$outboundSchema = z.object({\n  type: z.literal(\"text\").default(\"text\"),\n  text: z.string()\n});\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nvar TextChunk$;\n(function (TextChunk$) {\n  /** @deprecated use `TextChunk$inboundSchema` instead. */\n  TextChunk$.inboundSchema = exports.TextChunk$inboundSchema;\n  /** @deprecated use `TextChunk$outboundSchema` instead. */\n  TextChunk$.outboundSchema = exports.TextChunk$outboundSchema;\n})(TextChunk$ || (exports.TextChunk$ = TextChunk$ = {}));","map":{"version":3,"names":["z","__importStar","require","exports","TextChunkType","Text","TextChunkType$inboundSchema","nativeEnum","TextChunkType$outboundSchema","TextChunkType$","inboundSchema","outboundSchema","TextChunk$inboundSchema","object","type","literal","default","text","string","TextChunk$outboundSchema","TextChunk$"],"sources":["/Users/emilijablinkeviciute/Desktop/REPOS/Visualisers project/final-project-the-visualisers/my-app/node_modules/@mistralai/mistralai/src/models/components/textchunk.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const TextChunkType = {\n  Text: \"text\",\n} as const;\nexport type TextChunkType = ClosedEnum<typeof TextChunkType>;\n\nexport type TextChunk = {\n  type?: \"text\" | undefined;\n  text: string;\n};\n\n/** @internal */\nexport const TextChunkType$inboundSchema: z.ZodNativeEnum<\n  typeof TextChunkType\n> = z.nativeEnum(TextChunkType);\n\n/** @internal */\nexport const TextChunkType$outboundSchema: z.ZodNativeEnum<\n  typeof TextChunkType\n> = TextChunkType$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace TextChunkType$ {\n  /** @deprecated use `TextChunkType$inboundSchema` instead. */\n  export const inboundSchema = TextChunkType$inboundSchema;\n  /** @deprecated use `TextChunkType$outboundSchema` instead. */\n  export const outboundSchema = TextChunkType$outboundSchema;\n}\n\n/** @internal */\nexport const TextChunk$inboundSchema: z.ZodType<\n  TextChunk,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  type: z.literal(\"text\").default(\"text\"),\n  text: z.string(),\n});\n\n/** @internal */\nexport type TextChunk$Outbound = {\n  type: \"text\";\n  text: string;\n};\n\n/** @internal */\nexport const TextChunk$outboundSchema: z.ZodType<\n  TextChunk$Outbound,\n  z.ZodTypeDef,\n  TextChunk\n> = z.object({\n  type: z.literal(\"text\").default(\"text\"),\n  text: z.string(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace TextChunk$ {\n  /** @deprecated use `TextChunk$inboundSchema` instead. */\n  export const inboundSchema = TextChunk$inboundSchema;\n  /** @deprecated use `TextChunk$outboundSchema` instead. */\n  export const outboundSchema = TextChunk$outboundSchema;\n  /** @deprecated use `TextChunk$Outbound` instead. */\n  export type Outbound = TextChunk$Outbound;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAAA,CAAA,GAAAC,YAAA,CAAAC,OAAA;AAGaC,OAAA,CAAAC,aAAa,GAAG;EAC3BC,IAAI,EAAE;CACE;AAQV;AACaF,OAAA,CAAAG,2BAA2B,GAEpCN,CAAC,CAACO,UAAU,CAACJ,OAAA,CAAAC,aAAa,CAAC;AAE/B;AACaD,OAAA,CAAAK,4BAA4B,GAErCL,OAAA,CAAAG,2BAA2B;AAE/B;;;;AAIA,IAAiBG,cAAc;AAA/B,WAAiBA,cAAc;EAC7B;EACaA,cAAA,CAAAC,aAAa,GAAGP,OAAA,CAAAG,2BAA2B;EACxD;EACaG,cAAA,CAAAE,cAAc,GAAGR,OAAA,CAAAK,4BAA4B;AAC5D,CAAC,EALgBC,cAAc,KAAAN,OAAA,CAAAM,cAAA,GAAdA,cAAc;AAO/B;AACaN,OAAA,CAAAS,uBAAuB,GAIhCZ,CAAC,CAACa,MAAM,CAAC;EACXC,IAAI,EAAEd,CAAC,CAACe,OAAO,CAAC,MAAM,CAAC,CAACC,OAAO,CAAC,MAAM,CAAC;EACvCC,IAAI,EAAEjB,CAAC,CAACkB,MAAM;CACf,CAAC;AAQF;AACaf,OAAA,CAAAgB,wBAAwB,GAIjCnB,CAAC,CAACa,MAAM,CAAC;EACXC,IAAI,EAAEd,CAAC,CAACe,OAAO,CAAC,MAAM,CAAC,CAACC,OAAO,CAAC,MAAM,CAAC;EACvCC,IAAI,EAAEjB,CAAC,CAACkB,MAAM;CACf,CAAC;AAEF;;;;AAIA,IAAiBE,UAAU;AAA3B,WAAiBA,UAAU;EACzB;EACaA,UAAA,CAAAV,aAAa,GAAGP,OAAA,CAAAS,uBAAuB;EACpD;EACaQ,UAAA,CAAAT,cAAc,GAAGR,OAAA,CAAAgB,wBAAwB;AAGxD,CAAC,EAPgBC,UAAU,KAAAjB,OAAA,CAAAiB,UAAA,GAAVA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}