{"ast":null,"code":"\"use strict\";\n\n/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.envSchema = void 0;\nexports.env = env;\nexports.resetEnv = resetEnv;\nconst dlv_js_1 = require(\"./dlv.js\");\nconst z = __importStar(require(\"zod\"));\nexports.envSchema = z.object({\n  MISTRAL_API_KEY: z.string(),\n  MISTRAL_DEBUG: z.coerce.boolean()\n}).partial();\nlet envMemo = undefined;\n/**\r\n * Reads and validates environment variables.\r\n */\nfunction env() {\n  var _a, _b;\n  if (envMemo) {\n    return envMemo;\n  }\n  envMemo = exports.envSchema.parse((_b = (_a = (0, dlv_js_1.dlv)(globalThis, \"process.env\")) !== null && _a !== void 0 ? _a : (0, dlv_js_1.dlv)(globalThis, \"Deno.env\")) !== null && _b !== void 0 ? _b : {});\n  return envMemo;\n}\n/**\r\n * Clears the cached env object. Useful for testing with a fresh environment.\r\n */\nfunction resetEnv() {\n  envMemo = undefined;\n}","map":{"version":3,"names":["exports","env","resetEnv","dlv_js_1","require","z","__importStar","envSchema","object","MISTRAL_API_KEY","string","MISTRAL_DEBUG","coerce","boolean","partial","envMemo","undefined","parse","_b","_a","dlv","globalThis"],"sources":["C:\\Users\\silvi\\OneDrive\\Escritorio\\LUISDEEEE\\School of code\\week 13\\final-project-the-visualisers\\node_modules\\@mistralai\\mistralai\\src\\lib\\env.ts"],"sourcesContent":["/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\r\n\r\nimport { dlv } from \"./dlv.js\";\r\n\r\nimport * as z from \"zod\";\r\n\r\nexport interface Env {\r\n  MISTRAL_API_KEY?: string | undefined;\r\n\r\n  MISTRAL_DEBUG?: boolean | undefined;\r\n}\r\n\r\nexport const envSchema: z.ZodType<Env, z.ZodTypeDef, unknown> = z.object({\r\n  MISTRAL_API_KEY: z.string(),\r\n\r\n  MISTRAL_DEBUG: z.coerce.boolean(),\r\n})\r\n  .partial();\r\n\r\nlet envMemo: Env | undefined = undefined;\r\n/**\r\n * Reads and validates environment variables.\r\n */\r\nexport function env(): Env {\r\n  if (envMemo) {\r\n    return envMemo;\r\n  }\r\n\r\n  envMemo = envSchema.parse(\r\n    dlv(globalThis, \"process.env\") ?? dlv(globalThis, \"Deno.env\") ?? {},\r\n  );\r\n  return envMemo;\r\n}\r\n\r\n/**\r\n * Clears the cached env object. Useful for testing with a fresh environment.\r\n */\r\nexport function resetEnv() {\r\n  envMemo = undefined;\r\n}\r\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAA,OAAA,CAAAC,GAAA,GAAAA,GAAA;AAcAD,OAAA,CAAAE,QAAA,GAAAA,QAAA;AAnCA,MAAAC,QAAA,GAAAC,OAAA;AAEA,MAAAC,CAAA,GAAAC,YAAA,CAAAF,OAAA;AAQaJ,OAAA,CAAAO,SAAS,GAA0CF,CAAC,CAACG,MAAM,CAAC;EACvEC,eAAe,EAAEJ,CAAC,CAACK,MAAM,EAAE;EAE3BC,aAAa,EAAEN,CAAC,CAACO,MAAM,CAACC,OAAO;CAChC,CAAC,CACCC,OAAO,EAAE;AAEZ,IAAIC,OAAO,GAAoBC,SAAS;AACxC;;;AAGA,SAAgBf,GAAGA,CAAA;;EACjB,IAAIc,OAAO,EAAE;IACX,OAAOA,OAAO;EAChB;EAEAA,OAAO,GAAGf,OAAA,CAAAO,SAAS,CAACU,KAAK,CACvB,CAAAC,EAAA,IAAAC,EAAA,OAAAhB,QAAA,CAAAiB,GAAG,EAACC,UAAU,EAAE,aAAa,CAAC,cAAAF,EAAA,cAAAA,EAAA,GAAI,IAAAhB,QAAA,CAAAiB,GAAG,EAACC,UAAU,EAAE,UAAU,CAAC,cAAAH,EAAA,cAAAA,EAAA,GAAI,EAAE,CACpE;EACD,OAAOH,OAAO;AAChB;AAEA;;;AAGA,SAAgBb,QAAQA,CAAA;EACtBa,OAAO,GAAGC,SAAS;AACrB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}