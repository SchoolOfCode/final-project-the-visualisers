{"ast":null,"code":"\"use strict\";\n\n/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WandbIntegration$ = exports.WandbIntegration$outboundSchema = exports.WandbIntegration$inboundSchema = exports.WandbIntegrationType$ = exports.WandbIntegrationType$outboundSchema = exports.WandbIntegrationType$inboundSchema = exports.WandbIntegrationType = void 0;\nconst z = __importStar(require(\"zod\"));\nconst primitives_js_1 = require(\"../../lib/primitives.js\");\nexports.WandbIntegrationType = {\n  Wandb: \"wandb\"\n};\n/** @internal */\nexports.WandbIntegrationType$inboundSchema = z.nativeEnum(exports.WandbIntegrationType);\n/** @internal */\nexports.WandbIntegrationType$outboundSchema = exports.WandbIntegrationType$inboundSchema;\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar WandbIntegrationType$;\n(function (WandbIntegrationType$) {\n  /** @deprecated use `WandbIntegrationType$inboundSchema` instead. */\n  WandbIntegrationType$.inboundSchema = exports.WandbIntegrationType$inboundSchema;\n  /** @deprecated use `WandbIntegrationType$outboundSchema` instead. */\n  WandbIntegrationType$.outboundSchema = exports.WandbIntegrationType$outboundSchema;\n})(WandbIntegrationType$ || (exports.WandbIntegrationType$ = WandbIntegrationType$ = {}));\n/** @internal */\nexports.WandbIntegration$inboundSchema = z.object({\n  type: z.literal(\"wandb\").default(\"wandb\"),\n  project: z.string(),\n  name: z.nullable(z.string()).optional(),\n  api_key: z.string(),\n  run_name: z.nullable(z.string()).optional()\n}).transform(v => {\n  return (0, primitives_js_1.remap)(v, {\n    \"api_key\": \"apiKey\",\n    \"run_name\": \"runName\"\n  });\n});\n/** @internal */\nexports.WandbIntegration$outboundSchema = z.object({\n  type: z.literal(\"wandb\").default(\"wandb\"),\n  project: z.string(),\n  name: z.nullable(z.string()).optional(),\n  apiKey: z.string(),\n  runName: z.nullable(z.string()).optional()\n}).transform(v => {\n  return (0, primitives_js_1.remap)(v, {\n    apiKey: \"api_key\",\n    runName: \"run_name\"\n  });\n});\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar WandbIntegration$;\n(function (WandbIntegration$) {\n  /** @deprecated use `WandbIntegration$inboundSchema` instead. */\n  WandbIntegration$.inboundSchema = exports.WandbIntegration$inboundSchema;\n  /** @deprecated use `WandbIntegration$outboundSchema` instead. */\n  WandbIntegration$.outboundSchema = exports.WandbIntegration$outboundSchema;\n})(WandbIntegration$ || (exports.WandbIntegration$ = WandbIntegration$ = {}));","map":{"version":3,"names":["z","__importStar","require","primitives_js_1","exports","WandbIntegrationType","Wandb","WandbIntegrationType$inboundSchema","nativeEnum","WandbIntegrationType$outboundSchema","WandbIntegrationType$","inboundSchema","outboundSchema","WandbIntegration$inboundSchema","object","type","literal","default","project","string","name","nullable","optional","api_key","run_name","transform","v","remap","WandbIntegration$outboundSchema","apiKey","runName","WandbIntegration$"],"sources":["C:\\Users\\silvi\\OneDrive\\Escritorio\\LUISDEEEE\\School of code\\WEEK 12 FINAL HACKATON\\HistoriansRule\\node_modules\\@mistralai\\mistralai\\src\\models\\components\\wandbintegration.ts"],"sourcesContent":["/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\r\n\r\nimport * as z from \"zod\";\r\nimport { remap as remap$ } from \"../../lib/primitives.js\";\r\nimport { ClosedEnum } from \"../../types/enums.js\";\r\n\r\nexport const WandbIntegrationType = {\r\n  Wandb: \"wandb\",\r\n} as const;\r\nexport type WandbIntegrationType = ClosedEnum<typeof WandbIntegrationType>;\r\n\r\nexport type WandbIntegration = {\r\n  type?: \"wandb\" | undefined;\r\n  /**\r\n   * The name of the project that the new run will be created under.\r\n   */\r\n  project: string;\r\n  /**\r\n   * A display name to set for the run. If not set, will use the job ID as the name.\r\n   */\r\n  name?: string | null | undefined;\r\n  /**\r\n   * The WandB API key to use for authentication.\r\n   */\r\n  apiKey: string;\r\n  runName?: string | null | undefined;\r\n};\r\n\r\n/** @internal */\r\nexport const WandbIntegrationType$inboundSchema: z.ZodNativeEnum<\r\n  typeof WandbIntegrationType\r\n> = z.nativeEnum(WandbIntegrationType);\r\n\r\n/** @internal */\r\nexport const WandbIntegrationType$outboundSchema: z.ZodNativeEnum<\r\n  typeof WandbIntegrationType\r\n> = WandbIntegrationType$inboundSchema;\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace WandbIntegrationType$ {\r\n  /** @deprecated use `WandbIntegrationType$inboundSchema` instead. */\r\n  export const inboundSchema = WandbIntegrationType$inboundSchema;\r\n  /** @deprecated use `WandbIntegrationType$outboundSchema` instead. */\r\n  export const outboundSchema = WandbIntegrationType$outboundSchema;\r\n}\r\n\r\n/** @internal */\r\nexport const WandbIntegration$inboundSchema: z.ZodType<\r\n  WandbIntegration,\r\n  z.ZodTypeDef,\r\n  unknown\r\n> = z.object({\r\n  type: z.literal(\"wandb\").default(\"wandb\"),\r\n  project: z.string(),\r\n  name: z.nullable(z.string()).optional(),\r\n  api_key: z.string(),\r\n  run_name: z.nullable(z.string()).optional(),\r\n}).transform((v) => {\r\n  return remap$(v, {\r\n    \"api_key\": \"apiKey\",\r\n    \"run_name\": \"runName\",\r\n  });\r\n});\r\n\r\n/** @internal */\r\nexport type WandbIntegration$Outbound = {\r\n  type: \"wandb\";\r\n  project: string;\r\n  name?: string | null | undefined;\r\n  api_key: string;\r\n  run_name?: string | null | undefined;\r\n};\r\n\r\n/** @internal */\r\nexport const WandbIntegration$outboundSchema: z.ZodType<\r\n  WandbIntegration$Outbound,\r\n  z.ZodTypeDef,\r\n  WandbIntegration\r\n> = z.object({\r\n  type: z.literal(\"wandb\").default(\"wandb\"),\r\n  project: z.string(),\r\n  name: z.nullable(z.string()).optional(),\r\n  apiKey: z.string(),\r\n  runName: z.nullable(z.string()).optional(),\r\n}).transform((v) => {\r\n  return remap$(v, {\r\n    apiKey: \"api_key\",\r\n    runName: \"run_name\",\r\n  });\r\n});\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace WandbIntegration$ {\r\n  /** @deprecated use `WandbIntegration$inboundSchema` instead. */\r\n  export const inboundSchema = WandbIntegration$inboundSchema;\r\n  /** @deprecated use `WandbIntegration$outboundSchema` instead. */\r\n  export const outboundSchema = WandbIntegration$outboundSchema;\r\n  /** @deprecated use `WandbIntegration$Outbound` instead. */\r\n  export type Outbound = WandbIntegration$Outbound;\r\n}\r\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAAA,CAAA,GAAAC,YAAA,CAAAC,OAAA;AACA,MAAAC,eAAA,GAAAD,OAAA;AAGaE,OAAA,CAAAC,oBAAoB,GAAG;EAClCC,KAAK,EAAE;CACC;AAoBV;AACaF,OAAA,CAAAG,kCAAkC,GAE3CP,CAAC,CAACQ,UAAU,CAACJ,OAAA,CAAAC,oBAAoB,CAAC;AAEtC;AACaD,OAAA,CAAAK,mCAAmC,GAE5CL,OAAA,CAAAG,kCAAkC;AAEtC;;;;AAIA,IAAiBG,qBAAqB;AAAtC,WAAiBA,qBAAqB;EACpC;EACaA,qBAAA,CAAAC,aAAa,GAAGP,OAAA,CAAAG,kCAAkC;EAC/D;EACaG,qBAAA,CAAAE,cAAc,GAAGR,OAAA,CAAAK,mCAAmC;AACnE,CAAC,EALgBC,qBAAqB,KAAAN,OAAA,CAAAM,qBAAA,GAArBA,qBAAqB;AAOtC;AACaN,OAAA,CAAAS,8BAA8B,GAIvCb,CAAC,CAACc,MAAM,CAAC;EACXC,IAAI,EAAEf,CAAC,CAACgB,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,OAAO,CAAC;EACzCC,OAAO,EAAElB,CAAC,CAACmB,MAAM,EAAE;EACnBC,IAAI,EAAEpB,CAAC,CAACqB,QAAQ,CAACrB,CAAC,CAACmB,MAAM,EAAE,CAAC,CAACG,QAAQ,EAAE;EACvCC,OAAO,EAAEvB,CAAC,CAACmB,MAAM,EAAE;EACnBK,QAAQ,EAAExB,CAAC,CAACqB,QAAQ,CAACrB,CAAC,CAACmB,MAAM,EAAE,CAAC,CAACG,QAAQ;CAC1C,CAAC,CAACG,SAAS,CAAEC,CAAC,IAAI;EACjB,OAAO,IAAAvB,eAAA,CAAAwB,KAAM,EAACD,CAAC,EAAE;IACf,SAAS,EAAE,QAAQ;IACnB,UAAU,EAAE;GACb,CAAC;AACJ,CAAC,CAAC;AAWF;AACatB,OAAA,CAAAwB,+BAA+B,GAIxC5B,CAAC,CAACc,MAAM,CAAC;EACXC,IAAI,EAAEf,CAAC,CAACgB,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,OAAO,CAAC;EACzCC,OAAO,EAAElB,CAAC,CAACmB,MAAM,EAAE;EACnBC,IAAI,EAAEpB,CAAC,CAACqB,QAAQ,CAACrB,CAAC,CAACmB,MAAM,EAAE,CAAC,CAACG,QAAQ,EAAE;EACvCO,MAAM,EAAE7B,CAAC,CAACmB,MAAM,EAAE;EAClBW,OAAO,EAAE9B,CAAC,CAACqB,QAAQ,CAACrB,CAAC,CAACmB,MAAM,EAAE,CAAC,CAACG,QAAQ;CACzC,CAAC,CAACG,SAAS,CAAEC,CAAC,IAAI;EACjB,OAAO,IAAAvB,eAAA,CAAAwB,KAAM,EAACD,CAAC,EAAE;IACfG,MAAM,EAAE,SAAS;IACjBC,OAAO,EAAE;GACV,CAAC;AACJ,CAAC,CAAC;AAEF;;;;AAIA,IAAiBC,iBAAiB;AAAlC,WAAiBA,iBAAiB;EAChC;EACaA,iBAAA,CAAApB,aAAa,GAAGP,OAAA,CAAAS,8BAA8B;EAC3D;EACakB,iBAAA,CAAAnB,cAAc,GAAGR,OAAA,CAAAwB,+BAA+B;AAG/D,CAAC,EAPgBG,iBAAiB,KAAA3B,OAAA,CAAA2B,iBAAA,GAAjBA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}