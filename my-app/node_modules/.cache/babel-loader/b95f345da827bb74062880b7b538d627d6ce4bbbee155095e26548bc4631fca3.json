{"ast":null,"code":"\"use strict\";\n\n/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FunctionT$ = exports.FunctionT$outboundSchema = exports.FunctionT$inboundSchema = void 0;\nconst z = __importStar(require(\"zod\"));\n/** @internal */\nexports.FunctionT$inboundSchema = z.object({\n  name: z.string(),\n  description: z.string().default(\"\"),\n  parameters: z.record(z.any())\n});\n/** @internal */\nexports.FunctionT$outboundSchema = z.object({\n  name: z.string(),\n  description: z.string().default(\"\"),\n  parameters: z.record(z.any())\n});\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar FunctionT$;\n(function (FunctionT$) {\n  /** @deprecated use `FunctionT$inboundSchema` instead. */\n  FunctionT$.inboundSchema = exports.FunctionT$inboundSchema;\n  /** @deprecated use `FunctionT$outboundSchema` instead. */\n  FunctionT$.outboundSchema = exports.FunctionT$outboundSchema;\n})(FunctionT$ || (exports.FunctionT$ = FunctionT$ = {}));","map":{"version":3,"names":["z","__importStar","require","exports","FunctionT$inboundSchema","object","name","string","description","default","parameters","record","any","FunctionT$outboundSchema","FunctionT$","inboundSchema","outboundSchema"],"sources":["C:\\Users\\silvi\\OneDrive\\Escritorio\\LUISDEEEE\\School of code\\week 13\\final-project-the-visualisers\\node_modules\\@mistralai\\mistralai\\src\\models\\components\\function.ts"],"sourcesContent":["/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\r\n\r\nimport * as z from \"zod\";\r\n\r\nexport type FunctionT = {\r\n  name: string;\r\n  description?: string | undefined;\r\n  parameters: { [k: string]: any };\r\n};\r\n\r\n/** @internal */\r\nexport const FunctionT$inboundSchema: z.ZodType<\r\n  FunctionT,\r\n  z.ZodTypeDef,\r\n  unknown\r\n> = z.object({\r\n  name: z.string(),\r\n  description: z.string().default(\"\"),\r\n  parameters: z.record(z.any()),\r\n});\r\n\r\n/** @internal */\r\nexport type FunctionT$Outbound = {\r\n  name: string;\r\n  description: string;\r\n  parameters: { [k: string]: any };\r\n};\r\n\r\n/** @internal */\r\nexport const FunctionT$outboundSchema: z.ZodType<\r\n  FunctionT$Outbound,\r\n  z.ZodTypeDef,\r\n  FunctionT\r\n> = z.object({\r\n  name: z.string(),\r\n  description: z.string().default(\"\"),\r\n  parameters: z.record(z.any()),\r\n});\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace FunctionT$ {\r\n  /** @deprecated use `FunctionT$inboundSchema` instead. */\r\n  export const inboundSchema = FunctionT$inboundSchema;\r\n  /** @deprecated use `FunctionT$outboundSchema` instead. */\r\n  export const outboundSchema = FunctionT$outboundSchema;\r\n  /** @deprecated use `FunctionT$Outbound` instead. */\r\n  export type Outbound = FunctionT$Outbound;\r\n}\r\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAAA,CAAA,GAAAC,YAAA,CAAAC,OAAA;AAQA;AACaC,OAAA,CAAAC,uBAAuB,GAIhCJ,CAAC,CAACK,MAAM,CAAC;EACXC,IAAI,EAAEN,CAAC,CAACO,MAAM,EAAE;EAChBC,WAAW,EAAER,CAAC,CAACO,MAAM,EAAE,CAACE,OAAO,CAAC,EAAE,CAAC;EACnCC,UAAU,EAAEV,CAAC,CAACW,MAAM,CAACX,CAAC,CAACY,GAAG,EAAE;CAC7B,CAAC;AASF;AACaT,OAAA,CAAAU,wBAAwB,GAIjCb,CAAC,CAACK,MAAM,CAAC;EACXC,IAAI,EAAEN,CAAC,CAACO,MAAM,EAAE;EAChBC,WAAW,EAAER,CAAC,CAACO,MAAM,EAAE,CAACE,OAAO,CAAC,EAAE,CAAC;EACnCC,UAAU,EAAEV,CAAC,CAACW,MAAM,CAACX,CAAC,CAACY,GAAG,EAAE;CAC7B,CAAC;AAEF;;;;AAIA,IAAiBE,UAAU;AAA3B,WAAiBA,UAAU;EACzB;EACaA,UAAA,CAAAC,aAAa,GAAGZ,OAAA,CAAAC,uBAAuB;EACpD;EACaU,UAAA,CAAAE,cAAc,GAAGb,OAAA,CAAAU,wBAAwB;AAGxD,CAAC,EAPgBC,UAAU,KAAAX,OAAA,CAAAW,UAAA,GAAVA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}