{"ast":null,"code":"\"use strict\";\n\n/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tool$ = exports.Tool$outboundSchema = exports.Tool$inboundSchema = void 0;\nconst z = __importStar(require(\"zod\"));\nconst function_js_1 = require(\"./function.js\");\nconst tooltypes_js_1 = require(\"./tooltypes.js\");\n/** @internal */\nexports.Tool$inboundSchema = z.object({\n  type: tooltypes_js_1.ToolTypes$inboundSchema.optional(),\n  function: function_js_1.FunctionT$inboundSchema\n});\n/** @internal */\nexports.Tool$outboundSchema = z.object({\n  type: tooltypes_js_1.ToolTypes$outboundSchema.optional(),\n  function: function_js_1.FunctionT$outboundSchema\n});\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar Tool$;\n(function (Tool$) {\n  /** @deprecated use `Tool$inboundSchema` instead. */\n  Tool$.inboundSchema = exports.Tool$inboundSchema;\n  /** @deprecated use `Tool$outboundSchema` instead. */\n  Tool$.outboundSchema = exports.Tool$outboundSchema;\n})(Tool$ || (exports.Tool$ = Tool$ = {}));","map":{"version":3,"names":["z","__importStar","require","function_js_1","tooltypes_js_1","exports","Tool$inboundSchema","object","type","ToolTypes$inboundSchema","optional","function","FunctionT$inboundSchema","Tool$outboundSchema","ToolTypes$outboundSchema","FunctionT$outboundSchema","Tool$","inboundSchema","outboundSchema"],"sources":["C:\\Users\\silvi\\OneDrive\\Escritorio\\LUISDEEEE\\School of code\\WEEK 12 FINAL HACKATON\\HistoriansRule\\node_modules\\@mistralai\\mistralai\\src\\models\\components\\tool.ts"],"sourcesContent":["/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\r\n\r\nimport * as z from \"zod\";\r\nimport {\r\n  FunctionT,\r\n  FunctionT$inboundSchema,\r\n  FunctionT$Outbound,\r\n  FunctionT$outboundSchema,\r\n} from \"./function.js\";\r\nimport {\r\n  ToolTypes,\r\n  ToolTypes$inboundSchema,\r\n  ToolTypes$outboundSchema,\r\n} from \"./tooltypes.js\";\r\n\r\nexport type Tool = {\r\n  type?: ToolTypes | undefined;\r\n  function: FunctionT;\r\n};\r\n\r\n/** @internal */\r\nexport const Tool$inboundSchema: z.ZodType<Tool, z.ZodTypeDef, unknown> = z\r\n  .object({\r\n    type: ToolTypes$inboundSchema.optional(),\r\n    function: FunctionT$inboundSchema,\r\n  });\r\n\r\n/** @internal */\r\nexport type Tool$Outbound = {\r\n  type?: string | undefined;\r\n  function: FunctionT$Outbound;\r\n};\r\n\r\n/** @internal */\r\nexport const Tool$outboundSchema: z.ZodType<Tool$Outbound, z.ZodTypeDef, Tool> =\r\n  z.object({\r\n    type: ToolTypes$outboundSchema.optional(),\r\n    function: FunctionT$outboundSchema,\r\n  });\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace Tool$ {\r\n  /** @deprecated use `Tool$inboundSchema` instead. */\r\n  export const inboundSchema = Tool$inboundSchema;\r\n  /** @deprecated use `Tool$outboundSchema` instead. */\r\n  export const outboundSchema = Tool$outboundSchema;\r\n  /** @deprecated use `Tool$Outbound` instead. */\r\n  export type Outbound = Tool$Outbound;\r\n}\r\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAAA,CAAA,GAAAC,YAAA,CAAAC,OAAA;AACA,MAAAC,aAAA,GAAAD,OAAA;AAMA,MAAAE,cAAA,GAAAF,OAAA;AAWA;AACaG,OAAA,CAAAC,kBAAkB,GAA2CN,CAAC,CACxEO,MAAM,CAAC;EACNC,IAAI,EAAEJ,cAAA,CAAAK,uBAAuB,CAACC,QAAQ,EAAE;EACxCC,QAAQ,EAAER,aAAA,CAAAS;CACX,CAAC;AAQJ;AACaP,OAAA,CAAAQ,mBAAmB,GAC9Bb,CAAC,CAACO,MAAM,CAAC;EACPC,IAAI,EAAEJ,cAAA,CAAAU,wBAAwB,CAACJ,QAAQ,EAAE;EACzCC,QAAQ,EAAER,aAAA,CAAAY;CACX,CAAC;AAEJ;;;;AAIA,IAAiBC,KAAK;AAAtB,WAAiBA,KAAK;EACpB;EACaA,KAAA,CAAAC,aAAa,GAAGZ,OAAA,CAAAC,kBAAkB;EAC/C;EACaU,KAAA,CAAAE,cAAc,GAAGb,OAAA,CAAAQ,mBAAmB;AAGnD,CAAC,EAPgBG,KAAK,KAAAX,OAAA,CAAAW,KAAA,GAALA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}