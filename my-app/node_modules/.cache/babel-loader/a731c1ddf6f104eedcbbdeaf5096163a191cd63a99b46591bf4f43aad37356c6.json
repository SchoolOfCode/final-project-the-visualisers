{"ast":null,"code":"\"use strict\";\n\n/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GithubRepositoryIn$ = exports.GithubRepositoryIn$outboundSchema = exports.GithubRepositoryIn$inboundSchema = exports.GithubRepositoryInType$ = exports.GithubRepositoryInType$outboundSchema = exports.GithubRepositoryInType$inboundSchema = exports.GithubRepositoryInType = void 0;\nconst z = __importStar(require(\"zod\"));\nexports.GithubRepositoryInType = {\n  Github: \"github\"\n};\n/** @internal */\nexports.GithubRepositoryInType$inboundSchema = z.nativeEnum(exports.GithubRepositoryInType);\n/** @internal */\nexports.GithubRepositoryInType$outboundSchema = exports.GithubRepositoryInType$inboundSchema;\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar GithubRepositoryInType$;\n(function (GithubRepositoryInType$) {\n  /** @deprecated use `GithubRepositoryInType$inboundSchema` instead. */\n  GithubRepositoryInType$.inboundSchema = exports.GithubRepositoryInType$inboundSchema;\n  /** @deprecated use `GithubRepositoryInType$outboundSchema` instead. */\n  GithubRepositoryInType$.outboundSchema = exports.GithubRepositoryInType$outboundSchema;\n})(GithubRepositoryInType$ || (exports.GithubRepositoryInType$ = GithubRepositoryInType$ = {}));\n/** @internal */\nexports.GithubRepositoryIn$inboundSchema = z.object({\n  type: z.literal(\"github\").default(\"github\"),\n  name: z.string(),\n  owner: z.string(),\n  ref: z.nullable(z.string()).optional(),\n  weight: z.number().default(1),\n  token: z.string()\n});\n/** @internal */\nexports.GithubRepositoryIn$outboundSchema = z.object({\n  type: z.literal(\"github\").default(\"github\"),\n  name: z.string(),\n  owner: z.string(),\n  ref: z.nullable(z.string()).optional(),\n  weight: z.number().default(1),\n  token: z.string()\n});\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\nvar GithubRepositoryIn$;\n(function (GithubRepositoryIn$) {\n  /** @deprecated use `GithubRepositoryIn$inboundSchema` instead. */\n  GithubRepositoryIn$.inboundSchema = exports.GithubRepositoryIn$inboundSchema;\n  /** @deprecated use `GithubRepositoryIn$outboundSchema` instead. */\n  GithubRepositoryIn$.outboundSchema = exports.GithubRepositoryIn$outboundSchema;\n})(GithubRepositoryIn$ || (exports.GithubRepositoryIn$ = GithubRepositoryIn$ = {}));","map":{"version":3,"names":["z","__importStar","require","exports","GithubRepositoryInType","Github","GithubRepositoryInType$inboundSchema","nativeEnum","GithubRepositoryInType$outboundSchema","GithubRepositoryInType$","inboundSchema","outboundSchema","GithubRepositoryIn$inboundSchema","object","type","literal","default","name","string","owner","ref","nullable","optional","weight","number","token","GithubRepositoryIn$outboundSchema","GithubRepositoryIn$"],"sources":["C:\\Users\\silvi\\OneDrive\\Escritorio\\LUISDEEEE\\School of code\\week 13\\final-project-the-visualisers\\node_modules\\@mistralai\\mistralai\\src\\models\\components\\githubrepositoryin.ts"],"sourcesContent":["/*\r\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\r\n */\r\n\r\nimport * as z from \"zod\";\r\nimport { ClosedEnum } from \"../../types/enums.js\";\r\n\r\nexport const GithubRepositoryInType = {\r\n  Github: \"github\",\r\n} as const;\r\nexport type GithubRepositoryInType = ClosedEnum<typeof GithubRepositoryInType>;\r\n\r\nexport type GithubRepositoryIn = {\r\n  type?: \"github\" | undefined;\r\n  name: string;\r\n  owner: string;\r\n  ref?: string | null | undefined;\r\n  weight?: number | undefined;\r\n  token: string;\r\n};\r\n\r\n/** @internal */\r\nexport const GithubRepositoryInType$inboundSchema: z.ZodNativeEnum<\r\n  typeof GithubRepositoryInType\r\n> = z.nativeEnum(GithubRepositoryInType);\r\n\r\n/** @internal */\r\nexport const GithubRepositoryInType$outboundSchema: z.ZodNativeEnum<\r\n  typeof GithubRepositoryInType\r\n> = GithubRepositoryInType$inboundSchema;\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace GithubRepositoryInType$ {\r\n  /** @deprecated use `GithubRepositoryInType$inboundSchema` instead. */\r\n  export const inboundSchema = GithubRepositoryInType$inboundSchema;\r\n  /** @deprecated use `GithubRepositoryInType$outboundSchema` instead. */\r\n  export const outboundSchema = GithubRepositoryInType$outboundSchema;\r\n}\r\n\r\n/** @internal */\r\nexport const GithubRepositoryIn$inboundSchema: z.ZodType<\r\n  GithubRepositoryIn,\r\n  z.ZodTypeDef,\r\n  unknown\r\n> = z.object({\r\n  type: z.literal(\"github\").default(\"github\"),\r\n  name: z.string(),\r\n  owner: z.string(),\r\n  ref: z.nullable(z.string()).optional(),\r\n  weight: z.number().default(1),\r\n  token: z.string(),\r\n});\r\n\r\n/** @internal */\r\nexport type GithubRepositoryIn$Outbound = {\r\n  type: \"github\";\r\n  name: string;\r\n  owner: string;\r\n  ref?: string | null | undefined;\r\n  weight: number;\r\n  token: string;\r\n};\r\n\r\n/** @internal */\r\nexport const GithubRepositoryIn$outboundSchema: z.ZodType<\r\n  GithubRepositoryIn$Outbound,\r\n  z.ZodTypeDef,\r\n  GithubRepositoryIn\r\n> = z.object({\r\n  type: z.literal(\"github\").default(\"github\"),\r\n  name: z.string(),\r\n  owner: z.string(),\r\n  ref: z.nullable(z.string()).optional(),\r\n  weight: z.number().default(1),\r\n  token: z.string(),\r\n});\r\n\r\n/**\r\n * @internal\r\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\r\n */\r\nexport namespace GithubRepositoryIn$ {\r\n  /** @deprecated use `GithubRepositoryIn$inboundSchema` instead. */\r\n  export const inboundSchema = GithubRepositoryIn$inboundSchema;\r\n  /** @deprecated use `GithubRepositoryIn$outboundSchema` instead. */\r\n  export const outboundSchema = GithubRepositoryIn$outboundSchema;\r\n  /** @deprecated use `GithubRepositoryIn$Outbound` instead. */\r\n  export type Outbound = GithubRepositoryIn$Outbound;\r\n}\r\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAAA,CAAA,GAAAC,YAAA,CAAAC,OAAA;AAGaC,OAAA,CAAAC,sBAAsB,GAAG;EACpCC,MAAM,EAAE;CACA;AAYV;AACaF,OAAA,CAAAG,oCAAoC,GAE7CN,CAAC,CAACO,UAAU,CAACJ,OAAA,CAAAC,sBAAsB,CAAC;AAExC;AACaD,OAAA,CAAAK,qCAAqC,GAE9CL,OAAA,CAAAG,oCAAoC;AAExC;;;;AAIA,IAAiBG,uBAAuB;AAAxC,WAAiBA,uBAAuB;EACtC;EACaA,uBAAA,CAAAC,aAAa,GAAGP,OAAA,CAAAG,oCAAoC;EACjE;EACaG,uBAAA,CAAAE,cAAc,GAAGR,OAAA,CAAAK,qCAAqC;AACrE,CAAC,EALgBC,uBAAuB,KAAAN,OAAA,CAAAM,uBAAA,GAAvBA,uBAAuB;AAOxC;AACaN,OAAA,CAAAS,gCAAgC,GAIzCZ,CAAC,CAACa,MAAM,CAAC;EACXC,IAAI,EAAEd,CAAC,CAACe,OAAO,CAAC,QAAQ,CAAC,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC3CC,IAAI,EAAEjB,CAAC,CAACkB,MAAM,EAAE;EAChBC,KAAK,EAAEnB,CAAC,CAACkB,MAAM,EAAE;EACjBE,GAAG,EAAEpB,CAAC,CAACqB,QAAQ,CAACrB,CAAC,CAACkB,MAAM,EAAE,CAAC,CAACI,QAAQ,EAAE;EACtCC,MAAM,EAAEvB,CAAC,CAACwB,MAAM,EAAE,CAACR,OAAO,CAAC,CAAC,CAAC;EAC7BS,KAAK,EAAEzB,CAAC,CAACkB,MAAM;CAChB,CAAC;AAYF;AACaf,OAAA,CAAAuB,iCAAiC,GAI1C1B,CAAC,CAACa,MAAM,CAAC;EACXC,IAAI,EAAEd,CAAC,CAACe,OAAO,CAAC,QAAQ,CAAC,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC3CC,IAAI,EAAEjB,CAAC,CAACkB,MAAM,EAAE;EAChBC,KAAK,EAAEnB,CAAC,CAACkB,MAAM,EAAE;EACjBE,GAAG,EAAEpB,CAAC,CAACqB,QAAQ,CAACrB,CAAC,CAACkB,MAAM,EAAE,CAAC,CAACI,QAAQ,EAAE;EACtCC,MAAM,EAAEvB,CAAC,CAACwB,MAAM,EAAE,CAACR,OAAO,CAAC,CAAC,CAAC;EAC7BS,KAAK,EAAEzB,CAAC,CAACkB,MAAM;CAChB,CAAC;AAEF;;;;AAIA,IAAiBS,mBAAmB;AAApC,WAAiBA,mBAAmB;EAClC;EACaA,mBAAA,CAAAjB,aAAa,GAAGP,OAAA,CAAAS,gCAAgC;EAC7D;EACae,mBAAA,CAAAhB,cAAc,GAAGR,OAAA,CAAAuB,iCAAiC;AAGjE,CAAC,EAPgBC,mBAAmB,KAAAxB,OAAA,CAAAwB,mBAAA,GAAnBA,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}