{"ast":null,"code":"\"use strict\";\n\n/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SDK_METADATA = exports.ServerList = exports.ServerProd = void 0;\nexports.serverURLFromOptions = serverURLFromOptions;\nconst url_js_1 = require(\"./url.js\");\n/**\n * Production server\n */\nexports.ServerProd = \"prod\";\n/**\n * Contains the list of servers available to the SDK\n */\nexports.ServerList = {\n  [exports.ServerProd]: \"https://api.mistral.ai\"\n};\nfunction serverURLFromOptions(options) {\n  var _a;\n  let serverURL = options.serverURL;\n  const params = {};\n  if (!serverURL) {\n    const server = (_a = options.server) !== null && _a !== void 0 ? _a : exports.ServerProd;\n    serverURL = exports.ServerList[server] || \"\";\n  }\n  const u = (0, url_js_1.pathToFunc)(serverURL)(params);\n  return new URL(u);\n}\nexports.SDK_METADATA = {\n  language: \"typescript\",\n  openapiDocVersion: \"0.0.2\",\n  sdkVersion: \"1.1.0\",\n  genVersion: \"2.420.2\",\n  userAgent: \"speakeasy-sdk/typescript 1.1.0 2.420.2 0.0.2 @mistralai/mistralai\"\n};","map":{"version":3,"names":["exports","serverURLFromOptions","url_js_1","require","ServerProd","ServerList","options","serverURL","params","server","_a","u","pathToFunc","URL","SDK_METADATA","language","openapiDocVersion","sdkVersion","genVersion","userAgent"],"sources":["/Users/emilijablinkeviciute/Desktop/REPOS/Visualisers project/final-project-the-visualisers/my-app/node_modules/@mistralai/mistralai/src/lib/config.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport { HTTPClient } from \"./http.js\";\nimport { Logger } from \"./logger.js\";\nimport { RetryConfig } from \"./retries.js\";\nimport { Params, pathToFunc } from \"./url.js\";\n\n/**\n * Production server\n */\nexport const ServerProd = \"prod\";\n/**\n * Contains the list of servers available to the SDK\n */\nexport const ServerList = {\n  [ServerProd]: \"https://api.mistral.ai\",\n} as const;\n\nexport type SDKOptions = {\n  apiKey?: string | (() => Promise<string>);\n\n  httpClient?: HTTPClient;\n  /**\n   * Allows overriding the default server used by the SDK\n   */\n  server?: keyof typeof ServerList;\n  /**\n   * Allows overriding the default server URL used by the SDK\n   */\n  serverURL?: string;\n  /**\n   * Allows overriding the default retry config used by the SDK\n   */\n  retryConfig?: RetryConfig;\n  timeoutMs?: number;\n  debugLogger?: Logger;\n};\n\nexport function serverURLFromOptions(options: SDKOptions): URL | null {\n  let serverURL = options.serverURL;\n\n  const params: Params = {};\n\n  if (!serverURL) {\n    const server = options.server ?? ServerProd;\n    serverURL = ServerList[server] || \"\";\n  }\n\n  const u = pathToFunc(serverURL)(params);\n  return new URL(u);\n}\n\nexport const SDK_METADATA = {\n  language: \"typescript\",\n  openapiDocVersion: \"0.0.2\",\n  sdkVersion: \"1.1.0\",\n  genVersion: \"2.420.2\",\n  userAgent:\n    \"speakeasy-sdk/typescript 1.1.0 2.420.2 0.0.2 @mistralai/mistralai\",\n} as const;\n"],"mappings":";;AAAA;;;;;;;AAwCAA,OAAA,CAAAC,oBAAA,GAAAA,oBAAA;AAjCA,MAAAC,QAAA,GAAAC,OAAA;AAEA;;;AAGaH,OAAA,CAAAI,UAAU,GAAG,MAAM;AAChC;;;AAGaJ,OAAA,CAAAK,UAAU,GAAG;EACxB,CAACL,OAAA,CAAAI,UAAU,GAAG;CACN;AAsBV,SAAgBH,oBAAoBA,CAACK,OAAmB;;EACtD,IAAIC,SAAS,GAAGD,OAAO,CAACC,SAAS;EAEjC,MAAMC,MAAM,GAAW,EAAE;EAEzB,IAAI,CAACD,SAAS,EAAE;IACd,MAAME,MAAM,GAAG,CAAAC,EAAA,GAAAJ,OAAO,CAACG,MAAM,cAAAC,EAAA,cAAAA,EAAA,GAAIV,OAAA,CAAAI,UAAU;IAC3CG,SAAS,GAAGP,OAAA,CAAAK,UAAU,CAACI,MAAM,CAAC,IAAI,EAAE;EACtC;EAEA,MAAME,CAAC,GAAG,IAAAT,QAAA,CAAAU,UAAU,EAACL,SAAS,CAAC,CAACC,MAAM,CAAC;EACvC,OAAO,IAAIK,GAAG,CAACF,CAAC,CAAC;AACnB;AAEaX,OAAA,CAAAc,YAAY,GAAG;EAC1BC,QAAQ,EAAE,YAAY;EACtBC,iBAAiB,EAAE,OAAO;EAC1BC,UAAU,EAAE,OAAO;EACnBC,UAAU,EAAE,SAAS;EACrBC,SAAS,EACP;CACM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}