{"ast":null,"code":"\"use strict\";\n\n/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArchiveFTModelOut$ = exports.ArchiveFTModelOut$outboundSchema = exports.ArchiveFTModelOut$inboundSchema = exports.ArchiveFTModelOutObject$ = exports.ArchiveFTModelOutObject$outboundSchema = exports.ArchiveFTModelOutObject$inboundSchema = exports.ArchiveFTModelOutObject = void 0;\nconst z = __importStar(require(\"zod\"));\nexports.ArchiveFTModelOutObject = {\n  Model: \"model\"\n};\n/** @internal */\nexports.ArchiveFTModelOutObject$inboundSchema = z.nativeEnum(exports.ArchiveFTModelOutObject);\n/** @internal */\nexports.ArchiveFTModelOutObject$outboundSchema = exports.ArchiveFTModelOutObject$inboundSchema;\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nvar ArchiveFTModelOutObject$;\n(function (ArchiveFTModelOutObject$) {\n  /** @deprecated use `ArchiveFTModelOutObject$inboundSchema` instead. */\n  ArchiveFTModelOutObject$.inboundSchema = exports.ArchiveFTModelOutObject$inboundSchema;\n  /** @deprecated use `ArchiveFTModelOutObject$outboundSchema` instead. */\n  ArchiveFTModelOutObject$.outboundSchema = exports.ArchiveFTModelOutObject$outboundSchema;\n})(ArchiveFTModelOutObject$ || (exports.ArchiveFTModelOutObject$ = ArchiveFTModelOutObject$ = {}));\n/** @internal */\nexports.ArchiveFTModelOut$inboundSchema = z.object({\n  id: z.string(),\n  object: z.literal(\"model\").default(\"model\"),\n  archived: z.boolean().default(true)\n});\n/** @internal */\nexports.ArchiveFTModelOut$outboundSchema = z.object({\n  id: z.string(),\n  object: z.literal(\"model\").default(\"model\"),\n  archived: z.boolean().default(true)\n});\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nvar ArchiveFTModelOut$;\n(function (ArchiveFTModelOut$) {\n  /** @deprecated use `ArchiveFTModelOut$inboundSchema` instead. */\n  ArchiveFTModelOut$.inboundSchema = exports.ArchiveFTModelOut$inboundSchema;\n  /** @deprecated use `ArchiveFTModelOut$outboundSchema` instead. */\n  ArchiveFTModelOut$.outboundSchema = exports.ArchiveFTModelOut$outboundSchema;\n})(ArchiveFTModelOut$ || (exports.ArchiveFTModelOut$ = ArchiveFTModelOut$ = {}));","map":{"version":3,"names":["z","__importStar","require","exports","ArchiveFTModelOutObject","Model","ArchiveFTModelOutObject$inboundSchema","nativeEnum","ArchiveFTModelOutObject$outboundSchema","ArchiveFTModelOutObject$","inboundSchema","outboundSchema","ArchiveFTModelOut$inboundSchema","object","id","string","literal","default","archived","boolean","ArchiveFTModelOut$outboundSchema","ArchiveFTModelOut$"],"sources":["/Users/emilijablinkeviciute/Desktop/REPOS/Visualisers project/final-project-the-visualisers/my-app/node_modules/@mistralai/mistralai/src/models/components/archiveftmodelout.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const ArchiveFTModelOutObject = {\n  Model: \"model\",\n} as const;\nexport type ArchiveFTModelOutObject = ClosedEnum<\n  typeof ArchiveFTModelOutObject\n>;\n\nexport type ArchiveFTModelOut = {\n  id: string;\n  object?: \"model\" | undefined;\n  archived?: boolean | undefined;\n};\n\n/** @internal */\nexport const ArchiveFTModelOutObject$inboundSchema: z.ZodNativeEnum<\n  typeof ArchiveFTModelOutObject\n> = z.nativeEnum(ArchiveFTModelOutObject);\n\n/** @internal */\nexport const ArchiveFTModelOutObject$outboundSchema: z.ZodNativeEnum<\n  typeof ArchiveFTModelOutObject\n> = ArchiveFTModelOutObject$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ArchiveFTModelOutObject$ {\n  /** @deprecated use `ArchiveFTModelOutObject$inboundSchema` instead. */\n  export const inboundSchema = ArchiveFTModelOutObject$inboundSchema;\n  /** @deprecated use `ArchiveFTModelOutObject$outboundSchema` instead. */\n  export const outboundSchema = ArchiveFTModelOutObject$outboundSchema;\n}\n\n/** @internal */\nexport const ArchiveFTModelOut$inboundSchema: z.ZodType<\n  ArchiveFTModelOut,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  object: z.literal(\"model\").default(\"model\"),\n  archived: z.boolean().default(true),\n});\n\n/** @internal */\nexport type ArchiveFTModelOut$Outbound = {\n  id: string;\n  object: \"model\";\n  archived: boolean;\n};\n\n/** @internal */\nexport const ArchiveFTModelOut$outboundSchema: z.ZodType<\n  ArchiveFTModelOut$Outbound,\n  z.ZodTypeDef,\n  ArchiveFTModelOut\n> = z.object({\n  id: z.string(),\n  object: z.literal(\"model\").default(\"model\"),\n  archived: z.boolean().default(true),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ArchiveFTModelOut$ {\n  /** @deprecated use `ArchiveFTModelOut$inboundSchema` instead. */\n  export const inboundSchema = ArchiveFTModelOut$inboundSchema;\n  /** @deprecated use `ArchiveFTModelOut$outboundSchema` instead. */\n  export const outboundSchema = ArchiveFTModelOut$outboundSchema;\n  /** @deprecated use `ArchiveFTModelOut$Outbound` instead. */\n  export type Outbound = ArchiveFTModelOut$Outbound;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAAA,CAAA,GAAAC,YAAA,CAAAC,OAAA;AAGaC,OAAA,CAAAC,uBAAuB,GAAG;EACrCC,KAAK,EAAE;CACC;AAWV;AACaF,OAAA,CAAAG,qCAAqC,GAE9CN,CAAC,CAACO,UAAU,CAACJ,OAAA,CAAAC,uBAAuB,CAAC;AAEzC;AACaD,OAAA,CAAAK,sCAAsC,GAE/CL,OAAA,CAAAG,qCAAqC;AAEzC;;;;AAIA,IAAiBG,wBAAwB;AAAzC,WAAiBA,wBAAwB;EACvC;EACaA,wBAAA,CAAAC,aAAa,GAAGP,OAAA,CAAAG,qCAAqC;EAClE;EACaG,wBAAA,CAAAE,cAAc,GAAGR,OAAA,CAAAK,sCAAsC;AACtE,CAAC,EALgBC,wBAAwB,KAAAN,OAAA,CAAAM,wBAAA,GAAxBA,wBAAwB;AAOzC;AACaN,OAAA,CAAAS,+BAA+B,GAIxCZ,CAAC,CAACa,MAAM,CAAC;EACXC,EAAE,EAAEd,CAAC,CAACe,MAAM,EAAE;EACdF,MAAM,EAAEb,CAAC,CAACgB,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,QAAQ,EAAElB,CAAC,CAACmB,OAAO,EAAE,CAACF,OAAO,CAAC,IAAI;CACnC,CAAC;AASF;AACad,OAAA,CAAAiB,gCAAgC,GAIzCpB,CAAC,CAACa,MAAM,CAAC;EACXC,EAAE,EAAEd,CAAC,CAACe,MAAM,EAAE;EACdF,MAAM,EAAEb,CAAC,CAACgB,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,QAAQ,EAAElB,CAAC,CAACmB,OAAO,EAAE,CAACF,OAAO,CAAC,IAAI;CACnC,CAAC;AAEF;;;;AAIA,IAAiBI,kBAAkB;AAAnC,WAAiBA,kBAAkB;EACjC;EACaA,kBAAA,CAAAX,aAAa,GAAGP,OAAA,CAAAS,+BAA+B;EAC5D;EACaS,kBAAA,CAAAV,cAAc,GAAGR,OAAA,CAAAiB,gCAAgC;AAGhE,CAAC,EAPgBC,kBAAkB,KAAAlB,OAAA,CAAAkB,kBAAA,GAAlBA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}